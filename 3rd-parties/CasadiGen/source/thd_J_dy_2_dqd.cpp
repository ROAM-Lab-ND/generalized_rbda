/* This file was automatically generated by CasADi 3.6.2.
 *  It consists of: 
 *   1) content generated by CasADi runtime: not copyrighted
 *   2) template code copied from CasADi source: permissively licensed (MIT-0)
 *   3) user code: owned by the user
 *
 */
/* How to prefix internal symbols */
#ifdef CASADI_CODEGEN_PREFIX
  #define CASADI_NAMESPACE_CONCAT(NS, ID) _CASADI_NAMESPACE_CONCAT(NS, ID)
  #define _CASADI_NAMESPACE_CONCAT(NS, ID) NS ## ID
  #define CASADI_PREFIX(ID) CASADI_NAMESPACE_CONCAT(CODEGEN_PREFIX, ID)
#else
  #define CASADI_PREFIX(ID) thd_J_dy_2_dqd_ ## ID
#endif

#include <math.h>

#ifndef casadi_real
#define casadi_real double
#endif

#ifndef casadi_int
#define casadi_int long long int
#endif

/* Add prefix to internal symbols */
#define casadi_f0 CASADI_PREFIX(f0)
#define casadi_s0 CASADI_PREFIX(s0)
#define casadi_s1 CASADI_PREFIX(s1)

/* Symbol visibility in DLLs */
#ifndef CASADI_SYMBOL_EXPORT
  #if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
    #if defined(STATIC_LINKED)
      #define CASADI_SYMBOL_EXPORT
    #else
      #define CASADI_SYMBOL_EXPORT __declspec(dllexport)
    #endif
  #elif defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
    #define CASADI_SYMBOL_EXPORT __attribute__ ((visibility ("default")))
  #else
    #define CASADI_SYMBOL_EXPORT
  #endif
#endif

static const casadi_int casadi_s0[6] = {2, 1, 0, 2, 0, 1};
static const casadi_int casadi_s1[9] = {2, 2, 0, 2, 4, 0, 1, 0, 1};

/* thd_J_dy_2_dqd:(i0[2],i1[2])->(o0[2x2]) */
static int casadi_f0(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_real a0, a1, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a2, a20, a21, a22, a3, a4, a5, a6, a7, a8, a9;
  a0=1.6000000000000001e-03;
  a1=8.;
  a2=arg[0]? arg[0][1] : 0;
  a3=cos(a2);
  a3=(a1*a3);
  a4=arg[1]? arg[1][1] : 0;
  a5=sin(a4);
  a3=(a3*a5);
  a3=(a0*a3);
  a5=4.0000000000000002e-04;
  a6=57.;
  a7=arg[1]? arg[1][0] : 0;
  a8=cos(a7);
  a8=(a6*a8);
  a9=cos(a4);
  a8=(a8*a9);
  a8=(a5*a8);
  a3=(a3-a8);
  a8=7.;
  a9=sin(a7);
  a9=(a8*a9);
  a10=cos(a4);
  a9=(a9*a10);
  a9=(a0*a9);
  a3=(a3-a9);
  a9=cos(a7);
  a9=(a1*a9);
  a10=sin(a2);
  a11=(a9*a10);
  a12=cos(a4);
  a11=(a11*a12);
  a11=(a0*a11);
  a3=(a3-a11);
  a11=2.0000000000000001e-04;
  a12=49.;
  a13=sin(a7);
  a13=(a12*a13);
  a13=(a11*a13);
  a14=5.0000000000000002e-05;
  a15=399.;
  a16=cos(a7);
  a16=(a15*a16);
  a16=(a14*a16);
  a13=(a13-a16);
  a16=sin(a4);
  a17=sin(a7);
  a17=(a6*a17);
  a16=(a16*a17);
  a16=(a5*a16);
  a13=(a13+a16);
  a16=arg[0]? arg[0][0] : 0;
  a17=sin(a16);
  a17=(a8*a17);
  a18=cos(a7);
  a17=(a17*a18);
  a17=(a0*a17);
  a13=(a13-a17);
  a17=sin(a4);
  a18=cos(a7);
  a18=(a8*a18);
  a17=(a17*a18);
  a17=(a0*a17);
  a13=(a13+a17);
  a17=sin(a4);
  a18=sin(a16);
  a19=sin(a7);
  a19=(a1*a19);
  a19=(a18*a19);
  a19=(a17*a19);
  a19=(a0*a19);
  a13=(a13+a19);
  a19=(a13*a3);
  a20=cos(a16);
  a20=(a1*a20);
  a21=sin(a4);
  a20=(a20*a21);
  a20=(a0*a20);
  a21=cos(a7);
  a21=(a6*a21);
  a22=cos(a4);
  a21=(a21*a22);
  a21=(a5*a21);
  a20=(a20-a21);
  a21=sin(a7);
  a21=(a8*a21);
  a22=cos(a4);
  a21=(a21*a22);
  a21=(a0*a21);
  a20=(a20+a21);
  a21=cos(a7);
  a21=(a1*a21);
  a18=(a21*a18);
  a22=cos(a4);
  a18=(a18*a22);
  a18=(a0*a18);
  a20=(a20-a18);
  a18=sin(a7);
  a12=(a12*a18);
  a11=(a11*a12);
  a12=cos(a7);
  a15=(a15*a12);
  a14=(a14*a15);
  a11=(a11+a14);
  a14=sin(a4);
  a15=sin(a7);
  a15=(a6*a15);
  a14=(a14*a15);
  a14=(a5*a14);
  a11=(a11+a14);
  a14=sin(a2);
  a14=(a8*a14);
  a15=cos(a7);
  a14=(a14*a15);
  a14=(a0*a14);
  a11=(a11+a14);
  a14=sin(a4);
  a15=cos(a7);
  a15=(a8*a15);
  a14=(a14*a15);
  a14=(a0*a14);
  a11=(a11-a14);
  a14=sin(a4);
  a15=sin(a7);
  a15=(a1*a15);
  a10=(a10*a15);
  a10=(a14*a10);
  a10=(a0*a10);
  a11=(a11+a10);
  a10=(a20*a11);
  a19=(a19-a10);
  a3=(a3/a19);
  a10=cos(a16);
  a10=(a6*a10);
  a10=(a5*a10);
  a15=cos(a4);
  a12=sin(a16);
  a12=(a1*a12);
  a15=(a15*a12);
  a15=(a0*a15);
  a10=(a10+a15);
  a15=sin(a7);
  a12=cos(a16);
  a12=(a8*a12);
  a15=(a15*a12);
  a15=(a0*a15);
  a10=(a10-a15);
  a16=cos(a16);
  a21=(a21*a16);
  a17=(a17*a21);
  a17=(a0*a17);
  a10=(a10-a17);
  a3=(a3*a10);
  a3=(-a3);
  if (res[0]!=0) res[0][0]=a3;
  a11=(a11/a19);
  a11=(a11*a10);
  if (res[0]!=0) res[0][1]=a11;
  a20=(a20/a19);
  a11=cos(a2);
  a6=(a6*a11);
  a5=(a5*a6);
  a4=cos(a4);
  a6=sin(a2);
  a1=(a1*a6);
  a4=(a4*a1);
  a4=(a0*a4);
  a5=(a5+a4);
  a7=sin(a7);
  a4=cos(a2);
  a8=(a8*a4);
  a7=(a7*a8);
  a7=(a0*a7);
  a5=(a5+a7);
  a2=cos(a2);
  a9=(a9*a2);
  a14=(a14*a9);
  a0=(a0*a14);
  a5=(a5-a0);
  a20=(a20*a5);
  if (res[0]!=0) res[0][2]=a20;
  a13=(a13/a19);
  a13=(a13*a5);
  a13=(-a13);
  if (res[0]!=0) res[0][3]=a13;
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int thd_J_dy_2_dqd(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem){
  return casadi_f0(arg, res, iw, w, mem);
}

extern "C" CASADI_SYMBOL_EXPORT int thd_J_dy_2_dqd_alloc_mem(void) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int thd_J_dy_2_dqd_init_mem(int mem) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT void thd_J_dy_2_dqd_free_mem(int mem) {
}

extern "C" CASADI_SYMBOL_EXPORT int thd_J_dy_2_dqd_checkout(void) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT void thd_J_dy_2_dqd_release(int mem) {
}

extern "C" CASADI_SYMBOL_EXPORT void thd_J_dy_2_dqd_incref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT void thd_J_dy_2_dqd_decref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT casadi_int thd_J_dy_2_dqd_n_in(void) { return 2;}

extern "C" CASADI_SYMBOL_EXPORT casadi_int thd_J_dy_2_dqd_n_out(void) { return 1;}

extern "C" CASADI_SYMBOL_EXPORT casadi_real thd_J_dy_2_dqd_default_in(casadi_int i) {
  switch (i) {
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* thd_J_dy_2_dqd_name_in(casadi_int i) {
  switch (i) {
    case 0: return "i0";
    case 1: return "i1";
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* thd_J_dy_2_dqd_name_out(casadi_int i) {
  switch (i) {
    case 0: return "o0";
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* thd_J_dy_2_dqd_sparsity_in(casadi_int i) {
  switch (i) {
    case 0: return casadi_s0;
    case 1: return casadi_s0;
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* thd_J_dy_2_dqd_sparsity_out(casadi_int i) {
  switch (i) {
    case 0: return casadi_s1;
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT int thd_J_dy_2_dqd_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w) {
  if (sz_arg) *sz_arg = 2;
  if (sz_res) *sz_res = 1;
  if (sz_iw) *sz_iw = 0;
  if (sz_w) *sz_w = 0;
  return 0;
}


