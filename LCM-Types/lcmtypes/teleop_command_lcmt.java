/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

package lcmtypes;
 
import java.io.*;
import java.util.*;
import lcm.lcm.*;
 
public final class teleop_command_lcmt implements lcm.lcm.LCMEncodable
{
    public float q_des_base[];
    public float q_des_shoulderx[];
    public float q_des_shouldery[];
    public float q_des_elbow[];
    public float q_des_wristpitch[];
    public float q_des_wristroll[];
    public float q_des_gripper[];
    public float qd_des_base[];
    public float qd_des_shoulderx[];
    public float qd_des_shouldery[];
    public float qd_des_elbow[];
    public float qd_des_wristpitch[];
    public float qd_des_wristroll[];
    public float qd_des_gripper[];
    public float kp_base[];
    public float kp_shoulderx[];
    public float kp_shouldery[];
    public float kp_elbow[];
    public float kp_wristpitch[];
    public float kp_wristroll[];
    public float kp_gripper[];
    public float kd_base[];
    public float kd_shoulderx[];
    public float kd_shouldery[];
    public float kd_elbow[];
    public float kd_wristpitch[];
    public float kd_wristroll[];
    public float kd_gripper[];
    public float tau_base[];
    public float tau_shoulderx[];
    public float tau_shouldery[];
    public float tau_elbow[];
    public float tau_wristpitch[];
    public float tau_wristroll[];
    public float tau_gripper[];
    public int flags[];
 
    public teleop_command_lcmt()
    {
        q_des_base = new float[1];
        q_des_shoulderx = new float[1];
        q_des_shouldery = new float[1];
        q_des_elbow = new float[1];
        q_des_wristpitch = new float[1];
        q_des_wristroll = new float[1];
        q_des_gripper = new float[1];
        qd_des_base = new float[1];
        qd_des_shoulderx = new float[1];
        qd_des_shouldery = new float[1];
        qd_des_elbow = new float[1];
        qd_des_wristpitch = new float[1];
        qd_des_wristroll = new float[1];
        qd_des_gripper = new float[1];
        kp_base = new float[1];
        kp_shoulderx = new float[1];
        kp_shouldery = new float[1];
        kp_elbow = new float[1];
        kp_wristpitch = new float[1];
        kp_wristroll = new float[1];
        kp_gripper = new float[1];
        kd_base = new float[1];
        kd_shoulderx = new float[1];
        kd_shouldery = new float[1];
        kd_elbow = new float[1];
        kd_wristpitch = new float[1];
        kd_wristroll = new float[1];
        kd_gripper = new float[1];
        tau_base = new float[1];
        tau_shoulderx = new float[1];
        tau_shouldery = new float[1];
        tau_elbow = new float[1];
        tau_wristpitch = new float[1];
        tau_wristroll = new float[1];
        tau_gripper = new float[1];
        flags = new int[4];
    }
 
    public static final long LCM_FINGERPRINT;
    public static final long LCM_FINGERPRINT_BASE = 0xc33069e635c9ea0cL;
 
    static {
        LCM_FINGERPRINT = _hashRecursive(new ArrayList<Class<?>>());
    }
 
    public static long _hashRecursive(ArrayList<Class<?>> classes)
    {
        if (classes.contains(lcmtypes.teleop_command_lcmt.class))
            return 0L;
 
        classes.add(lcmtypes.teleop_command_lcmt.class);
        long hash = LCM_FINGERPRINT_BASE
            ;
        classes.remove(classes.size() - 1);
        return (hash<<1) + ((hash>>63)&1);
    }
 
    public void encode(DataOutput outs) throws IOException
    {
        outs.writeLong(LCM_FINGERPRINT);
        _encodeRecursive(outs);
    }
 
    public void _encodeRecursive(DataOutput outs) throws IOException
    {
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.q_des_base[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.q_des_shoulderx[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.q_des_shouldery[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.q_des_elbow[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.q_des_wristpitch[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.q_des_wristroll[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.q_des_gripper[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.qd_des_base[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.qd_des_shoulderx[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.qd_des_shouldery[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.qd_des_elbow[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.qd_des_wristpitch[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.qd_des_wristroll[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.qd_des_gripper[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.kp_base[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.kp_shoulderx[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.kp_shouldery[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.kp_elbow[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.kp_wristpitch[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.kp_wristroll[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.kp_gripper[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.kd_base[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.kd_shoulderx[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.kd_shouldery[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.kd_elbow[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.kd_wristpitch[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.kd_wristroll[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.kd_gripper[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.tau_base[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.tau_shoulderx[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.tau_shouldery[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.tau_elbow[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.tau_wristpitch[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.tau_wristroll[a]); 
        }
 
        for (int a = 0; a < 1; a++) {
            outs.writeFloat(this.tau_gripper[a]); 
        }
 
        for (int a = 0; a < 4; a++) {
            outs.writeInt(this.flags[a]); 
        }
 
    }
 
    public teleop_command_lcmt(byte[] data) throws IOException
    {
        this(new LCMDataInputStream(data));
    }
 
    public teleop_command_lcmt(DataInput ins) throws IOException
    {
        if (ins.readLong() != LCM_FINGERPRINT)
            throw new IOException("LCM Decode error: bad fingerprint");
 
        _decodeRecursive(ins);
    }
 
    public static lcmtypes.teleop_command_lcmt _decodeRecursiveFactory(DataInput ins) throws IOException
    {
        lcmtypes.teleop_command_lcmt o = new lcmtypes.teleop_command_lcmt();
        o._decodeRecursive(ins);
        return o;
    }
 
    public void _decodeRecursive(DataInput ins) throws IOException
    {
        this.q_des_base = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.q_des_base[a] = ins.readFloat();
        }
 
        this.q_des_shoulderx = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.q_des_shoulderx[a] = ins.readFloat();
        }
 
        this.q_des_shouldery = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.q_des_shouldery[a] = ins.readFloat();
        }
 
        this.q_des_elbow = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.q_des_elbow[a] = ins.readFloat();
        }
 
        this.q_des_wristpitch = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.q_des_wristpitch[a] = ins.readFloat();
        }
 
        this.q_des_wristroll = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.q_des_wristroll[a] = ins.readFloat();
        }
 
        this.q_des_gripper = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.q_des_gripper[a] = ins.readFloat();
        }
 
        this.qd_des_base = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.qd_des_base[a] = ins.readFloat();
        }
 
        this.qd_des_shoulderx = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.qd_des_shoulderx[a] = ins.readFloat();
        }
 
        this.qd_des_shouldery = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.qd_des_shouldery[a] = ins.readFloat();
        }
 
        this.qd_des_elbow = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.qd_des_elbow[a] = ins.readFloat();
        }
 
        this.qd_des_wristpitch = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.qd_des_wristpitch[a] = ins.readFloat();
        }
 
        this.qd_des_wristroll = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.qd_des_wristroll[a] = ins.readFloat();
        }
 
        this.qd_des_gripper = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.qd_des_gripper[a] = ins.readFloat();
        }
 
        this.kp_base = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.kp_base[a] = ins.readFloat();
        }
 
        this.kp_shoulderx = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.kp_shoulderx[a] = ins.readFloat();
        }
 
        this.kp_shouldery = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.kp_shouldery[a] = ins.readFloat();
        }
 
        this.kp_elbow = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.kp_elbow[a] = ins.readFloat();
        }
 
        this.kp_wristpitch = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.kp_wristpitch[a] = ins.readFloat();
        }
 
        this.kp_wristroll = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.kp_wristroll[a] = ins.readFloat();
        }
 
        this.kp_gripper = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.kp_gripper[a] = ins.readFloat();
        }
 
        this.kd_base = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.kd_base[a] = ins.readFloat();
        }
 
        this.kd_shoulderx = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.kd_shoulderx[a] = ins.readFloat();
        }
 
        this.kd_shouldery = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.kd_shouldery[a] = ins.readFloat();
        }
 
        this.kd_elbow = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.kd_elbow[a] = ins.readFloat();
        }
 
        this.kd_wristpitch = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.kd_wristpitch[a] = ins.readFloat();
        }
 
        this.kd_wristroll = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.kd_wristroll[a] = ins.readFloat();
        }
 
        this.kd_gripper = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.kd_gripper[a] = ins.readFloat();
        }
 
        this.tau_base = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.tau_base[a] = ins.readFloat();
        }
 
        this.tau_shoulderx = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.tau_shoulderx[a] = ins.readFloat();
        }
 
        this.tau_shouldery = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.tau_shouldery[a] = ins.readFloat();
        }
 
        this.tau_elbow = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.tau_elbow[a] = ins.readFloat();
        }
 
        this.tau_wristpitch = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.tau_wristpitch[a] = ins.readFloat();
        }
 
        this.tau_wristroll = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.tau_wristroll[a] = ins.readFloat();
        }
 
        this.tau_gripper = new float[(int) 1];
        for (int a = 0; a < 1; a++) {
            this.tau_gripper[a] = ins.readFloat();
        }
 
        this.flags = new int[(int) 4];
        for (int a = 0; a < 4; a++) {
            this.flags[a] = ins.readInt();
        }
 
    }
 
    public lcmtypes.teleop_command_lcmt copy()
    {
        lcmtypes.teleop_command_lcmt outobj = new lcmtypes.teleop_command_lcmt();
        outobj.q_des_base = new float[(int) 1];
        System.arraycopy(this.q_des_base, 0, outobj.q_des_base, 0, 1); 
        outobj.q_des_shoulderx = new float[(int) 1];
        System.arraycopy(this.q_des_shoulderx, 0, outobj.q_des_shoulderx, 0, 1); 
        outobj.q_des_shouldery = new float[(int) 1];
        System.arraycopy(this.q_des_shouldery, 0, outobj.q_des_shouldery, 0, 1); 
        outobj.q_des_elbow = new float[(int) 1];
        System.arraycopy(this.q_des_elbow, 0, outobj.q_des_elbow, 0, 1); 
        outobj.q_des_wristpitch = new float[(int) 1];
        System.arraycopy(this.q_des_wristpitch, 0, outobj.q_des_wristpitch, 0, 1); 
        outobj.q_des_wristroll = new float[(int) 1];
        System.arraycopy(this.q_des_wristroll, 0, outobj.q_des_wristroll, 0, 1); 
        outobj.q_des_gripper = new float[(int) 1];
        System.arraycopy(this.q_des_gripper, 0, outobj.q_des_gripper, 0, 1); 
        outobj.qd_des_base = new float[(int) 1];
        System.arraycopy(this.qd_des_base, 0, outobj.qd_des_base, 0, 1); 
        outobj.qd_des_shoulderx = new float[(int) 1];
        System.arraycopy(this.qd_des_shoulderx, 0, outobj.qd_des_shoulderx, 0, 1); 
        outobj.qd_des_shouldery = new float[(int) 1];
        System.arraycopy(this.qd_des_shouldery, 0, outobj.qd_des_shouldery, 0, 1); 
        outobj.qd_des_elbow = new float[(int) 1];
        System.arraycopy(this.qd_des_elbow, 0, outobj.qd_des_elbow, 0, 1); 
        outobj.qd_des_wristpitch = new float[(int) 1];
        System.arraycopy(this.qd_des_wristpitch, 0, outobj.qd_des_wristpitch, 0, 1); 
        outobj.qd_des_wristroll = new float[(int) 1];
        System.arraycopy(this.qd_des_wristroll, 0, outobj.qd_des_wristroll, 0, 1); 
        outobj.qd_des_gripper = new float[(int) 1];
        System.arraycopy(this.qd_des_gripper, 0, outobj.qd_des_gripper, 0, 1); 
        outobj.kp_base = new float[(int) 1];
        System.arraycopy(this.kp_base, 0, outobj.kp_base, 0, 1); 
        outobj.kp_shoulderx = new float[(int) 1];
        System.arraycopy(this.kp_shoulderx, 0, outobj.kp_shoulderx, 0, 1); 
        outobj.kp_shouldery = new float[(int) 1];
        System.arraycopy(this.kp_shouldery, 0, outobj.kp_shouldery, 0, 1); 
        outobj.kp_elbow = new float[(int) 1];
        System.arraycopy(this.kp_elbow, 0, outobj.kp_elbow, 0, 1); 
        outobj.kp_wristpitch = new float[(int) 1];
        System.arraycopy(this.kp_wristpitch, 0, outobj.kp_wristpitch, 0, 1); 
        outobj.kp_wristroll = new float[(int) 1];
        System.arraycopy(this.kp_wristroll, 0, outobj.kp_wristroll, 0, 1); 
        outobj.kp_gripper = new float[(int) 1];
        System.arraycopy(this.kp_gripper, 0, outobj.kp_gripper, 0, 1); 
        outobj.kd_base = new float[(int) 1];
        System.arraycopy(this.kd_base, 0, outobj.kd_base, 0, 1); 
        outobj.kd_shoulderx = new float[(int) 1];
        System.arraycopy(this.kd_shoulderx, 0, outobj.kd_shoulderx, 0, 1); 
        outobj.kd_shouldery = new float[(int) 1];
        System.arraycopy(this.kd_shouldery, 0, outobj.kd_shouldery, 0, 1); 
        outobj.kd_elbow = new float[(int) 1];
        System.arraycopy(this.kd_elbow, 0, outobj.kd_elbow, 0, 1); 
        outobj.kd_wristpitch = new float[(int) 1];
        System.arraycopy(this.kd_wristpitch, 0, outobj.kd_wristpitch, 0, 1); 
        outobj.kd_wristroll = new float[(int) 1];
        System.arraycopy(this.kd_wristroll, 0, outobj.kd_wristroll, 0, 1); 
        outobj.kd_gripper = new float[(int) 1];
        System.arraycopy(this.kd_gripper, 0, outobj.kd_gripper, 0, 1); 
        outobj.tau_base = new float[(int) 1];
        System.arraycopy(this.tau_base, 0, outobj.tau_base, 0, 1); 
        outobj.tau_shoulderx = new float[(int) 1];
        System.arraycopy(this.tau_shoulderx, 0, outobj.tau_shoulderx, 0, 1); 
        outobj.tau_shouldery = new float[(int) 1];
        System.arraycopy(this.tau_shouldery, 0, outobj.tau_shouldery, 0, 1); 
        outobj.tau_elbow = new float[(int) 1];
        System.arraycopy(this.tau_elbow, 0, outobj.tau_elbow, 0, 1); 
        outobj.tau_wristpitch = new float[(int) 1];
        System.arraycopy(this.tau_wristpitch, 0, outobj.tau_wristpitch, 0, 1); 
        outobj.tau_wristroll = new float[(int) 1];
        System.arraycopy(this.tau_wristroll, 0, outobj.tau_wristroll, 0, 1); 
        outobj.tau_gripper = new float[(int) 1];
        System.arraycopy(this.tau_gripper, 0, outobj.tau_gripper, 0, 1); 
        outobj.flags = new int[(int) 4];
        System.arraycopy(this.flags, 0, outobj.flags, 0, 4); 
        return outobj;
    }
 
}

