/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

package lcmtypes;
 
import java.io.*;
import java.util.*;
import lcm.lcm.*;
 
public final class basic_jump_info_lcmt implements lcm.lcm.LCMEncodable
{
    public double height_delta;
    public double dist_to_obst;
 
    public basic_jump_info_lcmt()
    {
    }
 
    public static final long LCM_FINGERPRINT;
    public static final long LCM_FINGERPRINT_BASE = 0xa5b0ac89c048c7a1L;
 
    static {
        LCM_FINGERPRINT = _hashRecursive(new ArrayList<Class<?>>());
    }
 
    public static long _hashRecursive(ArrayList<Class<?>> classes)
    {
        if (classes.contains(lcmtypes.basic_jump_info_lcmt.class))
            return 0L;
 
        classes.add(lcmtypes.basic_jump_info_lcmt.class);
        long hash = LCM_FINGERPRINT_BASE
            ;
        classes.remove(classes.size() - 1);
        return (hash<<1) + ((hash>>63)&1);
    }
 
    public void encode(DataOutput outs) throws IOException
    {
        outs.writeLong(LCM_FINGERPRINT);
        _encodeRecursive(outs);
    }
 
    public void _encodeRecursive(DataOutput outs) throws IOException
    {
        outs.writeDouble(this.height_delta); 
 
        outs.writeDouble(this.dist_to_obst); 
 
    }
 
    public basic_jump_info_lcmt(byte[] data) throws IOException
    {
        this(new LCMDataInputStream(data));
    }
 
    public basic_jump_info_lcmt(DataInput ins) throws IOException
    {
        if (ins.readLong() != LCM_FINGERPRINT)
            throw new IOException("LCM Decode error: bad fingerprint");
 
        _decodeRecursive(ins);
    }
 
    public static lcmtypes.basic_jump_info_lcmt _decodeRecursiveFactory(DataInput ins) throws IOException
    {
        lcmtypes.basic_jump_info_lcmt o = new lcmtypes.basic_jump_info_lcmt();
        o._decodeRecursive(ins);
        return o;
    }
 
    public void _decodeRecursive(DataInput ins) throws IOException
    {
        this.height_delta = ins.readDouble();
 
        this.dist_to_obst = ins.readDouble();
 
    }
 
    public lcmtypes.basic_jump_info_lcmt copy()
    {
        lcmtypes.basic_jump_info_lcmt outobj = new lcmtypes.basic_jump_info_lcmt();
        outobj.height_delta = this.height_delta;
 
        outobj.dist_to_obst = this.dist_to_obst;
 
        return outobj;
    }
 
}

