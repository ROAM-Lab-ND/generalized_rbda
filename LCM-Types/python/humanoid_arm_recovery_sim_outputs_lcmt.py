"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class humanoid_arm_recovery_sim_outputs_lcmt(object):
    __slots__ = ["terminate_sim", "body_low", "stayed_upright", "knee_on_ground", "opt_solved"]

    __typenames__ = ["boolean", "boolean", "boolean", "boolean", "boolean"]

    __dimensions__ = [None, None, None, None, None]

    def __init__(self):
        self.terminate_sim = False
        self.body_low = False
        self.stayed_upright = False
        self.knee_on_ground = False
        self.opt_solved = False

    def encode(self):
        buf = BytesIO()
        buf.write(humanoid_arm_recovery_sim_outputs_lcmt._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">bbbbb", self.terminate_sim, self.body_low, self.stayed_upright, self.knee_on_ground, self.opt_solved))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != humanoid_arm_recovery_sim_outputs_lcmt._get_packed_fingerprint():
            raise ValueError("Decode error")
        return humanoid_arm_recovery_sim_outputs_lcmt._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = humanoid_arm_recovery_sim_outputs_lcmt()
        self.terminate_sim = bool(struct.unpack('b', buf.read(1))[0])
        self.body_low = bool(struct.unpack('b', buf.read(1))[0])
        self.stayed_upright = bool(struct.unpack('b', buf.read(1))[0])
        self.knee_on_ground = bool(struct.unpack('b', buf.read(1))[0])
        self.opt_solved = bool(struct.unpack('b', buf.read(1))[0])
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if humanoid_arm_recovery_sim_outputs_lcmt in parents: return 0
        tmphash = (0x1cd303d81466f3cc) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff) + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if humanoid_arm_recovery_sim_outputs_lcmt._packed_fingerprint is None:
            humanoid_arm_recovery_sim_outputs_lcmt._packed_fingerprint = struct.pack(">Q", humanoid_arm_recovery_sim_outputs_lcmt._get_hash_recursive([]))
        return humanoid_arm_recovery_sim_outputs_lcmt._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

