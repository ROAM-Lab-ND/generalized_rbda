"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class landingTO_output_lcmt(object):
    __slots__ = ["opt_soln", "obj_val", "t_solve", "opt_solved", "iter"]

    __typenames__ = ["double", "double", "double", "int32_t", "int32_t"]

    __dimensions__ = [[972], None, None, None, None]

    def __init__(self):
        self.opt_soln = [ 0.0 for dim0 in range(972) ]
        self.obj_val = 0.0
        self.t_solve = 0.0
        self.opt_solved = 0
        self.iter = 0

    def encode(self):
        buf = BytesIO()
        buf.write(landingTO_output_lcmt._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack('>972d', *self.opt_soln[:972]))
        buf.write(struct.pack(">ddii", self.obj_val, self.t_solve, self.opt_solved, self.iter))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != landingTO_output_lcmt._get_packed_fingerprint():
            raise ValueError("Decode error")
        return landingTO_output_lcmt._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = landingTO_output_lcmt()
        self.opt_soln = struct.unpack('>972d', buf.read(7776))
        self.obj_val, self.t_solve, self.opt_solved, self.iter = struct.unpack(">ddii", buf.read(24))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if landingTO_output_lcmt in parents: return 0
        tmphash = (0x1d402410c0bb43f3) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff) + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if landingTO_output_lcmt._packed_fingerprint is None:
            landingTO_output_lcmt._packed_fingerprint = struct.pack(">Q", landingTO_output_lcmt._get_hash_recursive([]))
        return landingTO_output_lcmt._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

