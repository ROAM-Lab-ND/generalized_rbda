"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class humanoid_foot_forces_lcmt(object):
    __slots__ = ["force0", "force1", "force2", "force3", "force4", "force5"]

    __typenames__ = ["double", "double", "double", "double", "double", "double"]

    __dimensions__ = [[3], [3], [3], [3], [3], [3]]

    def __init__(self):
        self.force0 = [ 0.0 for dim0 in range(3) ]
        self.force1 = [ 0.0 for dim0 in range(3) ]
        self.force2 = [ 0.0 for dim0 in range(3) ]
        self.force3 = [ 0.0 for dim0 in range(3) ]
        self.force4 = [ 0.0 for dim0 in range(3) ]
        self.force5 = [ 0.0 for dim0 in range(3) ]

    def encode(self):
        buf = BytesIO()
        buf.write(humanoid_foot_forces_lcmt._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack('>3d', *self.force0[:3]))
        buf.write(struct.pack('>3d', *self.force1[:3]))
        buf.write(struct.pack('>3d', *self.force2[:3]))
        buf.write(struct.pack('>3d', *self.force3[:3]))
        buf.write(struct.pack('>3d', *self.force4[:3]))
        buf.write(struct.pack('>3d', *self.force5[:3]))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != humanoid_foot_forces_lcmt._get_packed_fingerprint():
            raise ValueError("Decode error")
        return humanoid_foot_forces_lcmt._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = humanoid_foot_forces_lcmt()
        self.force0 = struct.unpack('>3d', buf.read(24))
        self.force1 = struct.unpack('>3d', buf.read(24))
        self.force2 = struct.unpack('>3d', buf.read(24))
        self.force3 = struct.unpack('>3d', buf.read(24))
        self.force4 = struct.unpack('>3d', buf.read(24))
        self.force5 = struct.unpack('>3d', buf.read(24))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if humanoid_foot_forces_lcmt in parents: return 0
        tmphash = (0xf975212ee6b66a0) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff) + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if humanoid_foot_forces_lcmt._packed_fingerprint is None:
            humanoid_foot_forces_lcmt._packed_fingerprint = struct.pack(">Q", humanoid_foot_forces_lcmt._get_hash_recursive([]))
        return humanoid_foot_forces_lcmt._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

