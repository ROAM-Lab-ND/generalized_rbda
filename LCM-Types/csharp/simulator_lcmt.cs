/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

using System;
using System.Collections.Generic;
using System.IO;
using LCM.LCM;
 
namespace LCMTypes
{
    public sealed class simulator_lcmt : LCM.LCM.LCMEncodable
    {
        public double[] vb;
        public double[] rpy;
        public long timesteps;
        public double time;
        public double[] quat;
        public double[,] R;
        public double[] omegab;
        public double[] omega;
        public double[] p;
        public double[] v;
        public double[] vbd;
        public double[,] q;
        public double[,] qHleg;
        public double[,] qd;
        public double[,] qdHleg;
        public double[,] qdd;
        public double[,] tau;
        public double[,] f_foot;
        public double[,] p_foot;
 
        public simulator_lcmt()
        {
            vb = new double[3];
            rpy = new double[3];
            quat = new double[4];
            R = new double[3,3];
            omegab = new double[3];
            omega = new double[3];
            p = new double[3];
            v = new double[3];
            vbd = new double[3];
            q = new double[4,3];
            qHleg = new double[2,5];
            qd = new double[4,3];
            qdHleg = new double[2,5];
            qdd = new double[4,3];
            tau = new double[4,3];
            f_foot = new double[4,3];
            p_foot = new double[4,3];
        }
 
        public static readonly ulong LCM_FINGERPRINT;
        public static readonly ulong LCM_FINGERPRINT_BASE = 0x803bde20547b706eL;
 
        static simulator_lcmt()
        {
            LCM_FINGERPRINT = _hashRecursive(new List<String>());
        }
 
        public static ulong _hashRecursive(List<String> classes)
        {
            if (classes.Contains("LCMTypes.simulator_lcmt"))
                return 0L;
 
            classes.Add("LCMTypes.simulator_lcmt");
            ulong hash = LCM_FINGERPRINT_BASE
                ;
            classes.RemoveAt(classes.Count - 1);
            return (hash<<1) + ((hash>>63)&1);
        }
 
        public void Encode(LCMDataOutputStream outs)
        {
            outs.Write((long) LCM_FINGERPRINT);
            _encodeRecursive(outs);
        }
 
        public void _encodeRecursive(LCMDataOutputStream outs)
        {
            for (int a = 0; a < 3; a++) {
                outs.Write(this.vb[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.rpy[a]); 
            }
 
            outs.Write(this.timesteps); 
 
            outs.Write(this.time); 
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.quat[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                for (int b = 0; b < 3; b++) {
                    outs.Write(this.R[a,b]); 
                }
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.omegab[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.omega[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.p[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.v[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.vbd[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                for (int b = 0; b < 3; b++) {
                    outs.Write(this.q[a,b]); 
                }
            }
 
            for (int a = 0; a < 2; a++) {
                for (int b = 0; b < 5; b++) {
                    outs.Write(this.qHleg[a,b]); 
                }
            }
 
            for (int a = 0; a < 4; a++) {
                for (int b = 0; b < 3; b++) {
                    outs.Write(this.qd[a,b]); 
                }
            }
 
            for (int a = 0; a < 2; a++) {
                for (int b = 0; b < 5; b++) {
                    outs.Write(this.qdHleg[a,b]); 
                }
            }
 
            for (int a = 0; a < 4; a++) {
                for (int b = 0; b < 3; b++) {
                    outs.Write(this.qdd[a,b]); 
                }
            }
 
            for (int a = 0; a < 4; a++) {
                for (int b = 0; b < 3; b++) {
                    outs.Write(this.tau[a,b]); 
                }
            }
 
            for (int a = 0; a < 4; a++) {
                for (int b = 0; b < 3; b++) {
                    outs.Write(this.f_foot[a,b]); 
                }
            }
 
            for (int a = 0; a < 4; a++) {
                for (int b = 0; b < 3; b++) {
                    outs.Write(this.p_foot[a,b]); 
                }
            }
 
        }
 
        public simulator_lcmt(byte[] data) : this(new LCMDataInputStream(data))
        {
        }
 
        public simulator_lcmt(LCMDataInputStream ins)
        {
            if ((ulong) ins.ReadInt64() != LCM_FINGERPRINT)
                throw new System.IO.IOException("LCM Decode error: bad fingerprint");
 
            _decodeRecursive(ins);
        }
 
        public static LCMTypes.simulator_lcmt _decodeRecursiveFactory(LCMDataInputStream ins)
        {
            LCMTypes.simulator_lcmt o = new LCMTypes.simulator_lcmt();
            o._decodeRecursive(ins);
            return o;
        }
 
        public void _decodeRecursive(LCMDataInputStream ins)
        {
            this.vb = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.vb[a] = ins.ReadDouble();
            }
 
            this.rpy = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.rpy[a] = ins.ReadDouble();
            }
 
            this.timesteps = ins.ReadInt64();
 
            this.time = ins.ReadDouble();
 
            this.quat = new double[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.quat[a] = ins.ReadDouble();
            }
 
            this.R = new double[(int) 3,(int) 3];
            for (int a = 0; a < 3; a++) {
                for (int b = 0; b < 3; b++) {
                    this.R[a,b] = ins.ReadDouble();
                }
            }
 
            this.omegab = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.omegab[a] = ins.ReadDouble();
            }
 
            this.omega = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.omega[a] = ins.ReadDouble();
            }
 
            this.p = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.p[a] = ins.ReadDouble();
            }
 
            this.v = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.v[a] = ins.ReadDouble();
            }
 
            this.vbd = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.vbd[a] = ins.ReadDouble();
            }
 
            this.q = new double[(int) 4,(int) 3];
            for (int a = 0; a < 4; a++) {
                for (int b = 0; b < 3; b++) {
                    this.q[a,b] = ins.ReadDouble();
                }
            }
 
            this.qHleg = new double[(int) 2,(int) 5];
            for (int a = 0; a < 2; a++) {
                for (int b = 0; b < 5; b++) {
                    this.qHleg[a,b] = ins.ReadDouble();
                }
            }
 
            this.qd = new double[(int) 4,(int) 3];
            for (int a = 0; a < 4; a++) {
                for (int b = 0; b < 3; b++) {
                    this.qd[a,b] = ins.ReadDouble();
                }
            }
 
            this.qdHleg = new double[(int) 2,(int) 5];
            for (int a = 0; a < 2; a++) {
                for (int b = 0; b < 5; b++) {
                    this.qdHleg[a,b] = ins.ReadDouble();
                }
            }
 
            this.qdd = new double[(int) 4,(int) 3];
            for (int a = 0; a < 4; a++) {
                for (int b = 0; b < 3; b++) {
                    this.qdd[a,b] = ins.ReadDouble();
                }
            }
 
            this.tau = new double[(int) 4,(int) 3];
            for (int a = 0; a < 4; a++) {
                for (int b = 0; b < 3; b++) {
                    this.tau[a,b] = ins.ReadDouble();
                }
            }
 
            this.f_foot = new double[(int) 4,(int) 3];
            for (int a = 0; a < 4; a++) {
                for (int b = 0; b < 3; b++) {
                    this.f_foot[a,b] = ins.ReadDouble();
                }
            }
 
            this.p_foot = new double[(int) 4,(int) 3];
            for (int a = 0; a < 4; a++) {
                for (int b = 0; b < 3; b++) {
                    this.p_foot[a,b] = ins.ReadDouble();
                }
            }
 
        }
 
        public LCMTypes.simulator_lcmt Copy()
        {
            LCMTypes.simulator_lcmt outobj = new LCMTypes.simulator_lcmt();
            outobj.vb = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.vb[a] = this.vb[a];
            }
 
            outobj.rpy = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.rpy[a] = this.rpy[a];
            }
 
            outobj.timesteps = this.timesteps;
 
            outobj.time = this.time;
 
            outobj.quat = new double[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.quat[a] = this.quat[a];
            }
 
            outobj.R = new double[(int) 3,(int) 3];
            for (int a = 0; a < 3; a++) {
                for (int b = 0; b < 3; b++) {
                    outobj.R[a,b] = this.R[a,b];
                }
            }
 
            outobj.omegab = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.omegab[a] = this.omegab[a];
            }
 
            outobj.omega = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.omega[a] = this.omega[a];
            }
 
            outobj.p = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.p[a] = this.p[a];
            }
 
            outobj.v = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.v[a] = this.v[a];
            }
 
            outobj.vbd = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.vbd[a] = this.vbd[a];
            }
 
            outobj.q = new double[(int) 4,(int) 3];
            for (int a = 0; a < 4; a++) {
                for (int b = 0; b < 3; b++) {
                    outobj.q[a,b] = this.q[a,b];
                }
            }
 
            outobj.qHleg = new double[(int) 2,(int) 5];
            for (int a = 0; a < 2; a++) {
                for (int b = 0; b < 5; b++) {
                    outobj.qHleg[a,b] = this.qHleg[a,b];
                }
            }
 
            outobj.qd = new double[(int) 4,(int) 3];
            for (int a = 0; a < 4; a++) {
                for (int b = 0; b < 3; b++) {
                    outobj.qd[a,b] = this.qd[a,b];
                }
            }
 
            outobj.qdHleg = new double[(int) 2,(int) 5];
            for (int a = 0; a < 2; a++) {
                for (int b = 0; b < 5; b++) {
                    outobj.qdHleg[a,b] = this.qdHleg[a,b];
                }
            }
 
            outobj.qdd = new double[(int) 4,(int) 3];
            for (int a = 0; a < 4; a++) {
                for (int b = 0; b < 3; b++) {
                    outobj.qdd[a,b] = this.qdd[a,b];
                }
            }
 
            outobj.tau = new double[(int) 4,(int) 3];
            for (int a = 0; a < 4; a++) {
                for (int b = 0; b < 3; b++) {
                    outobj.tau[a,b] = this.tau[a,b];
                }
            }
 
            outobj.f_foot = new double[(int) 4,(int) 3];
            for (int a = 0; a < 4; a++) {
                for (int b = 0; b < 3; b++) {
                    outobj.f_foot[a,b] = this.f_foot[a,b];
                }
            }
 
            outobj.p_foot = new double[(int) 4,(int) 3];
            for (int a = 0; a < 4; a++) {
                for (int b = 0; b < 3; b++) {
                    outobj.p_foot[a,b] = this.p_foot[a,b];
                }
            }
 
            return outobj;
        }
    }
}

