/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

using System;
using System.Collections.Generic;
using System.IO;
using LCM.LCM;
 
namespace LCMTypes
{
    public sealed class ecat_data_lcmt : LCM.LCM.LCMEncodable
    {
        public float[] x;
        public float[] y;
        public float[] z;
        public float[] dx;
        public float[] dy;
        public float[] dz;
        public float[] fx;
        public float[] fy;
        public float[] fz;
        public float[] q_abad;
        public float[] q_hip;
        public float[] q_knee;
        public float[] dq_abad;
        public float[] dq_hip;
        public float[] dq_knee;
        public float[] tau_abad;
        public float[] tau_hip;
        public float[] tau_knee;
        public float[] tau_des_abad;
        public float[] tau_des_hip;
        public float[] tau_des_knee;
        public short[] loop_count_ti;
        public short[] ethercat_count_ti;
        public short[] microtime_ti;
 
        public ecat_data_lcmt()
        {
            x = new float[4];
            y = new float[4];
            z = new float[4];
            dx = new float[4];
            dy = new float[4];
            dz = new float[4];
            fx = new float[4];
            fy = new float[4];
            fz = new float[4];
            q_abad = new float[4];
            q_hip = new float[4];
            q_knee = new float[4];
            dq_abad = new float[4];
            dq_hip = new float[4];
            dq_knee = new float[4];
            tau_abad = new float[4];
            tau_hip = new float[4];
            tau_knee = new float[4];
            tau_des_abad = new float[4];
            tau_des_hip = new float[4];
            tau_des_knee = new float[4];
            loop_count_ti = new short[4];
            ethercat_count_ti = new short[4];
            microtime_ti = new short[4];
        }
 
        public static readonly ulong LCM_FINGERPRINT;
        public static readonly ulong LCM_FINGERPRINT_BASE = 0x2dd37f039d5cbafcL;
 
        static ecat_data_lcmt()
        {
            LCM_FINGERPRINT = _hashRecursive(new List<String>());
        }
 
        public static ulong _hashRecursive(List<String> classes)
        {
            if (classes.Contains("LCMTypes.ecat_data_lcmt"))
                return 0L;
 
            classes.Add("LCMTypes.ecat_data_lcmt");
            ulong hash = LCM_FINGERPRINT_BASE
                ;
            classes.RemoveAt(classes.Count - 1);
            return (hash<<1) + ((hash>>63)&1);
        }
 
        public void Encode(LCMDataOutputStream outs)
        {
            outs.Write((long) LCM_FINGERPRINT);
            _encodeRecursive(outs);
        }
 
        public void _encodeRecursive(LCMDataOutputStream outs)
        {
            for (int a = 0; a < 4; a++) {
                outs.Write(this.x[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.y[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.z[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.dx[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.dy[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.dz[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.fx[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.fy[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.fz[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.q_abad[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.q_hip[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.q_knee[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.dq_abad[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.dq_hip[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.dq_knee[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.tau_abad[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.tau_hip[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.tau_knee[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.tau_des_abad[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.tau_des_hip[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.tau_des_knee[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.loop_count_ti[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.ethercat_count_ti[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.microtime_ti[a]); 
            }
 
        }
 
        public ecat_data_lcmt(byte[] data) : this(new LCMDataInputStream(data))
        {
        }
 
        public ecat_data_lcmt(LCMDataInputStream ins)
        {
            if ((ulong) ins.ReadInt64() != LCM_FINGERPRINT)
                throw new System.IO.IOException("LCM Decode error: bad fingerprint");
 
            _decodeRecursive(ins);
        }
 
        public static LCMTypes.ecat_data_lcmt _decodeRecursiveFactory(LCMDataInputStream ins)
        {
            LCMTypes.ecat_data_lcmt o = new LCMTypes.ecat_data_lcmt();
            o._decodeRecursive(ins);
            return o;
        }
 
        public void _decodeRecursive(LCMDataInputStream ins)
        {
            this.x = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.x[a] = ins.ReadSingle();
            }
 
            this.y = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.y[a] = ins.ReadSingle();
            }
 
            this.z = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.z[a] = ins.ReadSingle();
            }
 
            this.dx = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.dx[a] = ins.ReadSingle();
            }
 
            this.dy = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.dy[a] = ins.ReadSingle();
            }
 
            this.dz = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.dz[a] = ins.ReadSingle();
            }
 
            this.fx = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.fx[a] = ins.ReadSingle();
            }
 
            this.fy = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.fy[a] = ins.ReadSingle();
            }
 
            this.fz = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.fz[a] = ins.ReadSingle();
            }
 
            this.q_abad = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.q_abad[a] = ins.ReadSingle();
            }
 
            this.q_hip = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.q_hip[a] = ins.ReadSingle();
            }
 
            this.q_knee = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.q_knee[a] = ins.ReadSingle();
            }
 
            this.dq_abad = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.dq_abad[a] = ins.ReadSingle();
            }
 
            this.dq_hip = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.dq_hip[a] = ins.ReadSingle();
            }
 
            this.dq_knee = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.dq_knee[a] = ins.ReadSingle();
            }
 
            this.tau_abad = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.tau_abad[a] = ins.ReadSingle();
            }
 
            this.tau_hip = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.tau_hip[a] = ins.ReadSingle();
            }
 
            this.tau_knee = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.tau_knee[a] = ins.ReadSingle();
            }
 
            this.tau_des_abad = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.tau_des_abad[a] = ins.ReadSingle();
            }
 
            this.tau_des_hip = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.tau_des_hip[a] = ins.ReadSingle();
            }
 
            this.tau_des_knee = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.tau_des_knee[a] = ins.ReadSingle();
            }
 
            this.loop_count_ti = new short[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.loop_count_ti[a] = ins.ReadInt16();
            }
 
            this.ethercat_count_ti = new short[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.ethercat_count_ti[a] = ins.ReadInt16();
            }
 
            this.microtime_ti = new short[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.microtime_ti[a] = ins.ReadInt16();
            }
 
        }
 
        public LCMTypes.ecat_data_lcmt Copy()
        {
            LCMTypes.ecat_data_lcmt outobj = new LCMTypes.ecat_data_lcmt();
            outobj.x = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.x[a] = this.x[a];
            }
 
            outobj.y = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.y[a] = this.y[a];
            }
 
            outobj.z = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.z[a] = this.z[a];
            }
 
            outobj.dx = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.dx[a] = this.dx[a];
            }
 
            outobj.dy = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.dy[a] = this.dy[a];
            }
 
            outobj.dz = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.dz[a] = this.dz[a];
            }
 
            outobj.fx = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.fx[a] = this.fx[a];
            }
 
            outobj.fy = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.fy[a] = this.fy[a];
            }
 
            outobj.fz = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.fz[a] = this.fz[a];
            }
 
            outobj.q_abad = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.q_abad[a] = this.q_abad[a];
            }
 
            outobj.q_hip = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.q_hip[a] = this.q_hip[a];
            }
 
            outobj.q_knee = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.q_knee[a] = this.q_knee[a];
            }
 
            outobj.dq_abad = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.dq_abad[a] = this.dq_abad[a];
            }
 
            outobj.dq_hip = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.dq_hip[a] = this.dq_hip[a];
            }
 
            outobj.dq_knee = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.dq_knee[a] = this.dq_knee[a];
            }
 
            outobj.tau_abad = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.tau_abad[a] = this.tau_abad[a];
            }
 
            outobj.tau_hip = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.tau_hip[a] = this.tau_hip[a];
            }
 
            outobj.tau_knee = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.tau_knee[a] = this.tau_knee[a];
            }
 
            outobj.tau_des_abad = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.tau_des_abad[a] = this.tau_des_abad[a];
            }
 
            outobj.tau_des_hip = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.tau_des_hip[a] = this.tau_des_hip[a];
            }
 
            outobj.tau_des_knee = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.tau_des_knee[a] = this.tau_des_knee[a];
            }
 
            outobj.loop_count_ti = new short[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.loop_count_ti[a] = this.loop_count_ti[a];
            }
 
            outobj.ethercat_count_ti = new short[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.ethercat_count_ti[a] = this.ethercat_count_ti[a];
            }
 
            outobj.microtime_ti = new short[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.microtime_ti[a] = this.microtime_ti[a];
            }
 
            return outobj;
        }
    }
}

