/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

using System;
using System.Collections.Generic;
using System.IO;
using LCM.LCM;
 
namespace LCMTypes
{
    public sealed class landingTO_input_lcmt : LCM.LCM.LCMEncodable
    {
        public double[] falling_conditions;
        public double[] Xref;
        public double[] Uref;
        public double[] dt_opt;
        public double[] q_min;
        public double[] q_max;
        public double[] qd_min;
        public double[] qd_max;
        public double[] q_init;
        public double[] qd_init;
        public double[] c_init;
        public double[] q_term_min;
        public double[] q_term_max;
        public double[] qd_term_min;
        public double[] qd_term_max;
        public double[] QN;
        public double[] jpos_min;
        public double[] jpos_max;
        public double[] kin_box;
        public double mu;
        public double l_leg_max;
        public double mass;
        public double[] Ib;
        public double[] Ib_inv;
 
        public landingTO_input_lcmt()
        {
            falling_conditions = new double[9];
            Xref = new double[252];
            Uref = new double[480];
            dt_opt = new double[20];
            q_min = new double[6];
            q_max = new double[6];
            qd_min = new double[6];
            qd_max = new double[6];
            q_init = new double[6];
            qd_init = new double[6];
            c_init = new double[12];
            q_term_min = new double[6];
            q_term_max = new double[6];
            qd_term_min = new double[6];
            qd_term_max = new double[6];
            QN = new double[12];
            jpos_min = new double[12];
            jpos_max = new double[12];
            kin_box = new double[2];
            Ib = new double[3];
            Ib_inv = new double[3];
        }
 
        public static readonly ulong LCM_FINGERPRINT;
        public static readonly ulong LCM_FINGERPRINT_BASE = 0x67286e14bdaa9318L;
 
        static landingTO_input_lcmt()
        {
            LCM_FINGERPRINT = _hashRecursive(new List<String>());
        }
 
        public static ulong _hashRecursive(List<String> classes)
        {
            if (classes.Contains("LCMTypes.landingTO_input_lcmt"))
                return 0L;
 
            classes.Add("LCMTypes.landingTO_input_lcmt");
            ulong hash = LCM_FINGERPRINT_BASE
                ;
            classes.RemoveAt(classes.Count - 1);
            return (hash<<1) + ((hash>>63)&1);
        }
 
        public void Encode(LCMDataOutputStream outs)
        {
            outs.Write((long) LCM_FINGERPRINT);
            _encodeRecursive(outs);
        }
 
        public void _encodeRecursive(LCMDataOutputStream outs)
        {
            for (int a = 0; a < 9; a++) {
                outs.Write(this.falling_conditions[a]); 
            }
 
            for (int a = 0; a < 252; a++) {
                outs.Write(this.Xref[a]); 
            }
 
            for (int a = 0; a < 480; a++) {
                outs.Write(this.Uref[a]); 
            }
 
            for (int a = 0; a < 20; a++) {
                outs.Write(this.dt_opt[a]); 
            }
 
            for (int a = 0; a < 6; a++) {
                outs.Write(this.q_min[a]); 
            }
 
            for (int a = 0; a < 6; a++) {
                outs.Write(this.q_max[a]); 
            }
 
            for (int a = 0; a < 6; a++) {
                outs.Write(this.qd_min[a]); 
            }
 
            for (int a = 0; a < 6; a++) {
                outs.Write(this.qd_max[a]); 
            }
 
            for (int a = 0; a < 6; a++) {
                outs.Write(this.q_init[a]); 
            }
 
            for (int a = 0; a < 6; a++) {
                outs.Write(this.qd_init[a]); 
            }
 
            for (int a = 0; a < 12; a++) {
                outs.Write(this.c_init[a]); 
            }
 
            for (int a = 0; a < 6; a++) {
                outs.Write(this.q_term_min[a]); 
            }
 
            for (int a = 0; a < 6; a++) {
                outs.Write(this.q_term_max[a]); 
            }
 
            for (int a = 0; a < 6; a++) {
                outs.Write(this.qd_term_min[a]); 
            }
 
            for (int a = 0; a < 6; a++) {
                outs.Write(this.qd_term_max[a]); 
            }
 
            for (int a = 0; a < 12; a++) {
                outs.Write(this.QN[a]); 
            }
 
            for (int a = 0; a < 12; a++) {
                outs.Write(this.jpos_min[a]); 
            }
 
            for (int a = 0; a < 12; a++) {
                outs.Write(this.jpos_max[a]); 
            }
 
            for (int a = 0; a < 2; a++) {
                outs.Write(this.kin_box[a]); 
            }
 
            outs.Write(this.mu); 
 
            outs.Write(this.l_leg_max); 
 
            outs.Write(this.mass); 
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.Ib[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.Ib_inv[a]); 
            }
 
        }
 
        public landingTO_input_lcmt(byte[] data) : this(new LCMDataInputStream(data))
        {
        }
 
        public landingTO_input_lcmt(LCMDataInputStream ins)
        {
            if ((ulong) ins.ReadInt64() != LCM_FINGERPRINT)
                throw new System.IO.IOException("LCM Decode error: bad fingerprint");
 
            _decodeRecursive(ins);
        }
 
        public static LCMTypes.landingTO_input_lcmt _decodeRecursiveFactory(LCMDataInputStream ins)
        {
            LCMTypes.landingTO_input_lcmt o = new LCMTypes.landingTO_input_lcmt();
            o._decodeRecursive(ins);
            return o;
        }
 
        public void _decodeRecursive(LCMDataInputStream ins)
        {
            this.falling_conditions = new double[(int) 9];
            for (int a = 0; a < 9; a++) {
                this.falling_conditions[a] = ins.ReadDouble();
            }
 
            this.Xref = new double[(int) 252];
            for (int a = 0; a < 252; a++) {
                this.Xref[a] = ins.ReadDouble();
            }
 
            this.Uref = new double[(int) 480];
            for (int a = 0; a < 480; a++) {
                this.Uref[a] = ins.ReadDouble();
            }
 
            this.dt_opt = new double[(int) 20];
            for (int a = 0; a < 20; a++) {
                this.dt_opt[a] = ins.ReadDouble();
            }
 
            this.q_min = new double[(int) 6];
            for (int a = 0; a < 6; a++) {
                this.q_min[a] = ins.ReadDouble();
            }
 
            this.q_max = new double[(int) 6];
            for (int a = 0; a < 6; a++) {
                this.q_max[a] = ins.ReadDouble();
            }
 
            this.qd_min = new double[(int) 6];
            for (int a = 0; a < 6; a++) {
                this.qd_min[a] = ins.ReadDouble();
            }
 
            this.qd_max = new double[(int) 6];
            for (int a = 0; a < 6; a++) {
                this.qd_max[a] = ins.ReadDouble();
            }
 
            this.q_init = new double[(int) 6];
            for (int a = 0; a < 6; a++) {
                this.q_init[a] = ins.ReadDouble();
            }
 
            this.qd_init = new double[(int) 6];
            for (int a = 0; a < 6; a++) {
                this.qd_init[a] = ins.ReadDouble();
            }
 
            this.c_init = new double[(int) 12];
            for (int a = 0; a < 12; a++) {
                this.c_init[a] = ins.ReadDouble();
            }
 
            this.q_term_min = new double[(int) 6];
            for (int a = 0; a < 6; a++) {
                this.q_term_min[a] = ins.ReadDouble();
            }
 
            this.q_term_max = new double[(int) 6];
            for (int a = 0; a < 6; a++) {
                this.q_term_max[a] = ins.ReadDouble();
            }
 
            this.qd_term_min = new double[(int) 6];
            for (int a = 0; a < 6; a++) {
                this.qd_term_min[a] = ins.ReadDouble();
            }
 
            this.qd_term_max = new double[(int) 6];
            for (int a = 0; a < 6; a++) {
                this.qd_term_max[a] = ins.ReadDouble();
            }
 
            this.QN = new double[(int) 12];
            for (int a = 0; a < 12; a++) {
                this.QN[a] = ins.ReadDouble();
            }
 
            this.jpos_min = new double[(int) 12];
            for (int a = 0; a < 12; a++) {
                this.jpos_min[a] = ins.ReadDouble();
            }
 
            this.jpos_max = new double[(int) 12];
            for (int a = 0; a < 12; a++) {
                this.jpos_max[a] = ins.ReadDouble();
            }
 
            this.kin_box = new double[(int) 2];
            for (int a = 0; a < 2; a++) {
                this.kin_box[a] = ins.ReadDouble();
            }
 
            this.mu = ins.ReadDouble();
 
            this.l_leg_max = ins.ReadDouble();
 
            this.mass = ins.ReadDouble();
 
            this.Ib = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.Ib[a] = ins.ReadDouble();
            }
 
            this.Ib_inv = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.Ib_inv[a] = ins.ReadDouble();
            }
 
        }
 
        public LCMTypes.landingTO_input_lcmt Copy()
        {
            LCMTypes.landingTO_input_lcmt outobj = new LCMTypes.landingTO_input_lcmt();
            outobj.falling_conditions = new double[(int) 9];
            for (int a = 0; a < 9; a++) {
                outobj.falling_conditions[a] = this.falling_conditions[a];
            }
 
            outobj.Xref = new double[(int) 252];
            for (int a = 0; a < 252; a++) {
                outobj.Xref[a] = this.Xref[a];
            }
 
            outobj.Uref = new double[(int) 480];
            for (int a = 0; a < 480; a++) {
                outobj.Uref[a] = this.Uref[a];
            }
 
            outobj.dt_opt = new double[(int) 20];
            for (int a = 0; a < 20; a++) {
                outobj.dt_opt[a] = this.dt_opt[a];
            }
 
            outobj.q_min = new double[(int) 6];
            for (int a = 0; a < 6; a++) {
                outobj.q_min[a] = this.q_min[a];
            }
 
            outobj.q_max = new double[(int) 6];
            for (int a = 0; a < 6; a++) {
                outobj.q_max[a] = this.q_max[a];
            }
 
            outobj.qd_min = new double[(int) 6];
            for (int a = 0; a < 6; a++) {
                outobj.qd_min[a] = this.qd_min[a];
            }
 
            outobj.qd_max = new double[(int) 6];
            for (int a = 0; a < 6; a++) {
                outobj.qd_max[a] = this.qd_max[a];
            }
 
            outobj.q_init = new double[(int) 6];
            for (int a = 0; a < 6; a++) {
                outobj.q_init[a] = this.q_init[a];
            }
 
            outobj.qd_init = new double[(int) 6];
            for (int a = 0; a < 6; a++) {
                outobj.qd_init[a] = this.qd_init[a];
            }
 
            outobj.c_init = new double[(int) 12];
            for (int a = 0; a < 12; a++) {
                outobj.c_init[a] = this.c_init[a];
            }
 
            outobj.q_term_min = new double[(int) 6];
            for (int a = 0; a < 6; a++) {
                outobj.q_term_min[a] = this.q_term_min[a];
            }
 
            outobj.q_term_max = new double[(int) 6];
            for (int a = 0; a < 6; a++) {
                outobj.q_term_max[a] = this.q_term_max[a];
            }
 
            outobj.qd_term_min = new double[(int) 6];
            for (int a = 0; a < 6; a++) {
                outobj.qd_term_min[a] = this.qd_term_min[a];
            }
 
            outobj.qd_term_max = new double[(int) 6];
            for (int a = 0; a < 6; a++) {
                outobj.qd_term_max[a] = this.qd_term_max[a];
            }
 
            outobj.QN = new double[(int) 12];
            for (int a = 0; a < 12; a++) {
                outobj.QN[a] = this.QN[a];
            }
 
            outobj.jpos_min = new double[(int) 12];
            for (int a = 0; a < 12; a++) {
                outobj.jpos_min[a] = this.jpos_min[a];
            }
 
            outobj.jpos_max = new double[(int) 12];
            for (int a = 0; a < 12; a++) {
                outobj.jpos_max[a] = this.jpos_max[a];
            }
 
            outobj.kin_box = new double[(int) 2];
            for (int a = 0; a < 2; a++) {
                outobj.kin_box[a] = this.kin_box[a];
            }
 
            outobj.mu = this.mu;
 
            outobj.l_leg_max = this.l_leg_max;
 
            outobj.mass = this.mass;
 
            outobj.Ib = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.Ib[a] = this.Ib[a];
            }
 
            outobj.Ib_inv = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.Ib_inv[a] = this.Ib_inv[a];
            }
 
            return outobj;
        }
    }
}

