/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

using System;
using System.Collections.Generic;
using System.IO;
using LCM.LCM;
 
namespace LCMTypes
{
    public sealed class ecat_command_lcmt : LCM.LCM.LCMEncodable
    {
        public float[] x_des;
        public float[] y_des;
        public float[] z_des;
        public float[] dx_des;
        public float[] dy_des;
        public float[] dz_des;
        public float[] kpx;
        public float[] kpy;
        public float[] kpz;
        public float[] kdx;
        public float[] kdy;
        public float[] kdz;
        public int[] enable;
        public int[] zero_joints;
        public float[] fx_ff;
        public float[] fy_ff;
        public float[] fz_ff;
        public float[] tau_abad_ff;
        public float[] tau_hip_ff;
        public float[] tau_knee_ff;
        public float[] abad_zero_angle;
        public float[] hip_zero_angle;
        public float[] knee_zero_angle;
        public float[] q_des_abad;
        public float[] q_des_hip;
        public float[] q_des_knee;
        public float[] qd_des_abad;
        public float[] qd_des_hip;
        public float[] qd_des_knee;
        public float[] kp_joint_abad;
        public float[] kp_joint_hip;
        public float[] kp_joint_knee;
        public float[] kd_joint_abad;
        public float[] kd_joint_hip;
        public float[] kd_joint_knee;
        public float[] max_torque;
 
        public ecat_command_lcmt()
        {
            x_des = new float[4];
            y_des = new float[4];
            z_des = new float[4];
            dx_des = new float[4];
            dy_des = new float[4];
            dz_des = new float[4];
            kpx = new float[4];
            kpy = new float[4];
            kpz = new float[4];
            kdx = new float[4];
            kdy = new float[4];
            kdz = new float[4];
            enable = new int[4];
            zero_joints = new int[4];
            fx_ff = new float[4];
            fy_ff = new float[4];
            fz_ff = new float[4];
            tau_abad_ff = new float[4];
            tau_hip_ff = new float[4];
            tau_knee_ff = new float[4];
            abad_zero_angle = new float[4];
            hip_zero_angle = new float[4];
            knee_zero_angle = new float[4];
            q_des_abad = new float[4];
            q_des_hip = new float[4];
            q_des_knee = new float[4];
            qd_des_abad = new float[4];
            qd_des_hip = new float[4];
            qd_des_knee = new float[4];
            kp_joint_abad = new float[4];
            kp_joint_hip = new float[4];
            kp_joint_knee = new float[4];
            kd_joint_abad = new float[4];
            kd_joint_hip = new float[4];
            kd_joint_knee = new float[4];
            max_torque = new float[4];
        }
 
        public static readonly ulong LCM_FINGERPRINT;
        public static readonly ulong LCM_FINGERPRINT_BASE = 0xad03831ee9458f34L;
 
        static ecat_command_lcmt()
        {
            LCM_FINGERPRINT = _hashRecursive(new List<String>());
        }
 
        public static ulong _hashRecursive(List<String> classes)
        {
            if (classes.Contains("LCMTypes.ecat_command_lcmt"))
                return 0L;
 
            classes.Add("LCMTypes.ecat_command_lcmt");
            ulong hash = LCM_FINGERPRINT_BASE
                ;
            classes.RemoveAt(classes.Count - 1);
            return (hash<<1) + ((hash>>63)&1);
        }
 
        public void Encode(LCMDataOutputStream outs)
        {
            outs.Write((long) LCM_FINGERPRINT);
            _encodeRecursive(outs);
        }
 
        public void _encodeRecursive(LCMDataOutputStream outs)
        {
            for (int a = 0; a < 4; a++) {
                outs.Write(this.x_des[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.y_des[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.z_des[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.dx_des[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.dy_des[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.dz_des[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.kpx[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.kpy[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.kpz[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.kdx[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.kdy[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.kdz[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.enable[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.zero_joints[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.fx_ff[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.fy_ff[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.fz_ff[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.tau_abad_ff[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.tau_hip_ff[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.tau_knee_ff[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.abad_zero_angle[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.hip_zero_angle[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.knee_zero_angle[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.q_des_abad[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.q_des_hip[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.q_des_knee[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.qd_des_abad[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.qd_des_hip[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.qd_des_knee[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.kp_joint_abad[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.kp_joint_hip[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.kp_joint_knee[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.kd_joint_abad[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.kd_joint_hip[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.kd_joint_knee[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.max_torque[a]); 
            }
 
        }
 
        public ecat_command_lcmt(byte[] data) : this(new LCMDataInputStream(data))
        {
        }
 
        public ecat_command_lcmt(LCMDataInputStream ins)
        {
            if ((ulong) ins.ReadInt64() != LCM_FINGERPRINT)
                throw new System.IO.IOException("LCM Decode error: bad fingerprint");
 
            _decodeRecursive(ins);
        }
 
        public static LCMTypes.ecat_command_lcmt _decodeRecursiveFactory(LCMDataInputStream ins)
        {
            LCMTypes.ecat_command_lcmt o = new LCMTypes.ecat_command_lcmt();
            o._decodeRecursive(ins);
            return o;
        }
 
        public void _decodeRecursive(LCMDataInputStream ins)
        {
            this.x_des = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.x_des[a] = ins.ReadSingle();
            }
 
            this.y_des = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.y_des[a] = ins.ReadSingle();
            }
 
            this.z_des = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.z_des[a] = ins.ReadSingle();
            }
 
            this.dx_des = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.dx_des[a] = ins.ReadSingle();
            }
 
            this.dy_des = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.dy_des[a] = ins.ReadSingle();
            }
 
            this.dz_des = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.dz_des[a] = ins.ReadSingle();
            }
 
            this.kpx = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.kpx[a] = ins.ReadSingle();
            }
 
            this.kpy = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.kpy[a] = ins.ReadSingle();
            }
 
            this.kpz = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.kpz[a] = ins.ReadSingle();
            }
 
            this.kdx = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.kdx[a] = ins.ReadSingle();
            }
 
            this.kdy = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.kdy[a] = ins.ReadSingle();
            }
 
            this.kdz = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.kdz[a] = ins.ReadSingle();
            }
 
            this.enable = new int[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.enable[a] = ins.ReadInt32();
            }
 
            this.zero_joints = new int[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.zero_joints[a] = ins.ReadInt32();
            }
 
            this.fx_ff = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.fx_ff[a] = ins.ReadSingle();
            }
 
            this.fy_ff = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.fy_ff[a] = ins.ReadSingle();
            }
 
            this.fz_ff = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.fz_ff[a] = ins.ReadSingle();
            }
 
            this.tau_abad_ff = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.tau_abad_ff[a] = ins.ReadSingle();
            }
 
            this.tau_hip_ff = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.tau_hip_ff[a] = ins.ReadSingle();
            }
 
            this.tau_knee_ff = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.tau_knee_ff[a] = ins.ReadSingle();
            }
 
            this.abad_zero_angle = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.abad_zero_angle[a] = ins.ReadSingle();
            }
 
            this.hip_zero_angle = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.hip_zero_angle[a] = ins.ReadSingle();
            }
 
            this.knee_zero_angle = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.knee_zero_angle[a] = ins.ReadSingle();
            }
 
            this.q_des_abad = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.q_des_abad[a] = ins.ReadSingle();
            }
 
            this.q_des_hip = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.q_des_hip[a] = ins.ReadSingle();
            }
 
            this.q_des_knee = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.q_des_knee[a] = ins.ReadSingle();
            }
 
            this.qd_des_abad = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.qd_des_abad[a] = ins.ReadSingle();
            }
 
            this.qd_des_hip = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.qd_des_hip[a] = ins.ReadSingle();
            }
 
            this.qd_des_knee = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.qd_des_knee[a] = ins.ReadSingle();
            }
 
            this.kp_joint_abad = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.kp_joint_abad[a] = ins.ReadSingle();
            }
 
            this.kp_joint_hip = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.kp_joint_hip[a] = ins.ReadSingle();
            }
 
            this.kp_joint_knee = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.kp_joint_knee[a] = ins.ReadSingle();
            }
 
            this.kd_joint_abad = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.kd_joint_abad[a] = ins.ReadSingle();
            }
 
            this.kd_joint_hip = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.kd_joint_hip[a] = ins.ReadSingle();
            }
 
            this.kd_joint_knee = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.kd_joint_knee[a] = ins.ReadSingle();
            }
 
            this.max_torque = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.max_torque[a] = ins.ReadSingle();
            }
 
        }
 
        public LCMTypes.ecat_command_lcmt Copy()
        {
            LCMTypes.ecat_command_lcmt outobj = new LCMTypes.ecat_command_lcmt();
            outobj.x_des = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.x_des[a] = this.x_des[a];
            }
 
            outobj.y_des = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.y_des[a] = this.y_des[a];
            }
 
            outobj.z_des = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.z_des[a] = this.z_des[a];
            }
 
            outobj.dx_des = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.dx_des[a] = this.dx_des[a];
            }
 
            outobj.dy_des = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.dy_des[a] = this.dy_des[a];
            }
 
            outobj.dz_des = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.dz_des[a] = this.dz_des[a];
            }
 
            outobj.kpx = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.kpx[a] = this.kpx[a];
            }
 
            outobj.kpy = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.kpy[a] = this.kpy[a];
            }
 
            outobj.kpz = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.kpz[a] = this.kpz[a];
            }
 
            outobj.kdx = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.kdx[a] = this.kdx[a];
            }
 
            outobj.kdy = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.kdy[a] = this.kdy[a];
            }
 
            outobj.kdz = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.kdz[a] = this.kdz[a];
            }
 
            outobj.enable = new int[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.enable[a] = this.enable[a];
            }
 
            outobj.zero_joints = new int[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.zero_joints[a] = this.zero_joints[a];
            }
 
            outobj.fx_ff = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.fx_ff[a] = this.fx_ff[a];
            }
 
            outobj.fy_ff = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.fy_ff[a] = this.fy_ff[a];
            }
 
            outobj.fz_ff = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.fz_ff[a] = this.fz_ff[a];
            }
 
            outobj.tau_abad_ff = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.tau_abad_ff[a] = this.tau_abad_ff[a];
            }
 
            outobj.tau_hip_ff = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.tau_hip_ff[a] = this.tau_hip_ff[a];
            }
 
            outobj.tau_knee_ff = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.tau_knee_ff[a] = this.tau_knee_ff[a];
            }
 
            outobj.abad_zero_angle = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.abad_zero_angle[a] = this.abad_zero_angle[a];
            }
 
            outobj.hip_zero_angle = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.hip_zero_angle[a] = this.hip_zero_angle[a];
            }
 
            outobj.knee_zero_angle = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.knee_zero_angle[a] = this.knee_zero_angle[a];
            }
 
            outobj.q_des_abad = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.q_des_abad[a] = this.q_des_abad[a];
            }
 
            outobj.q_des_hip = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.q_des_hip[a] = this.q_des_hip[a];
            }
 
            outobj.q_des_knee = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.q_des_knee[a] = this.q_des_knee[a];
            }
 
            outobj.qd_des_abad = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.qd_des_abad[a] = this.qd_des_abad[a];
            }
 
            outobj.qd_des_hip = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.qd_des_hip[a] = this.qd_des_hip[a];
            }
 
            outobj.qd_des_knee = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.qd_des_knee[a] = this.qd_des_knee[a];
            }
 
            outobj.kp_joint_abad = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.kp_joint_abad[a] = this.kp_joint_abad[a];
            }
 
            outobj.kp_joint_hip = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.kp_joint_hip[a] = this.kp_joint_hip[a];
            }
 
            outobj.kp_joint_knee = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.kp_joint_knee[a] = this.kp_joint_knee[a];
            }
 
            outobj.kd_joint_abad = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.kd_joint_abad[a] = this.kd_joint_abad[a];
            }
 
            outobj.kd_joint_hip = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.kd_joint_hip[a] = this.kd_joint_hip[a];
            }
 
            outobj.kd_joint_knee = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.kd_joint_knee[a] = this.kd_joint_knee[a];
            }
 
            outobj.max_torque = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.max_torque[a] = this.max_torque[a];
            }
 
            return outobj;
        }
    }
}

