/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

using System;
using System.Collections.Generic;
using System.IO;
using LCM.LCM;
 
namespace LCMTypes
{
    public sealed class acrobatic_lcmt : LCM.LCM.LCMEncodable
    {
        public float time;
        public int iter;
        public float[] pcom_est;
        public float[] pbody_est;
        public float[] rpy_est;
        public float[] vcom_est;
        public float[] omegaBody_est;
        public float[] h_est;
        public float[] pfoot_est;
        public float[] pfoot_leg_controller_est;
        public float[] q_est;
        public float[] qd_est;
        public float[] tau_est;
        public float[] pcom_ref;
        public float[] pbody_ref;
        public float[] rpy_ref;
        public float[] vcom_ref;
        public float[] omegaBody_ref;
        public float[] h_ref;
        public float[] pfoot_ref;
        public float[] pfoot_leg_controller_ref;
        public float[] q_ref;
        public float[] qd_ref;
        public float[] tau_ref;
        public float[] pbody_TO;
        public float[] rpy_TO;
        public float[] vcom_TO;
        public float[] omegaBody_TO;
        public float[] h_TO;
        public float[] u_ref;
        public float[] u_TO;
        public float[] cs_ref;
        public float[] f_ff;
        public float[] linear_error;
        public float[] delta_u;
        public float[] gQP;
        public float[] lbQP;
        public float[] ubQP;
        public float[] lbAQP;
        public float[] ubAQP;
        public float[] Prde;
 
        public acrobatic_lcmt()
        {
            pcom_est = new float[3];
            pbody_est = new float[3];
            rpy_est = new float[3];
            vcom_est = new float[3];
            omegaBody_est = new float[3];
            h_est = new float[3];
            pfoot_est = new float[12];
            pfoot_leg_controller_est = new float[12];
            q_est = new float[12];
            qd_est = new float[12];
            tau_est = new float[12];
            pcom_ref = new float[3];
            pbody_ref = new float[3];
            rpy_ref = new float[3];
            vcom_ref = new float[3];
            omegaBody_ref = new float[3];
            h_ref = new float[3];
            pfoot_ref = new float[12];
            pfoot_leg_controller_ref = new float[12];
            q_ref = new float[12];
            qd_ref = new float[12];
            tau_ref = new float[12];
            pbody_TO = new float[3];
            rpy_TO = new float[3];
            vcom_TO = new float[3];
            omegaBody_TO = new float[3];
            h_TO = new float[3];
            u_ref = new float[12];
            u_TO = new float[12];
            cs_ref = new float[4];
            f_ff = new float[12];
            linear_error = new float[24];
            delta_u = new float[12];
            gQP = new float[12];
            lbQP = new float[12];
            ubQP = new float[12];
            lbAQP = new float[20];
            ubAQP = new float[20];
            Prde = new float[576];
        }
 
        public static readonly ulong LCM_FINGERPRINT;
        public static readonly ulong LCM_FINGERPRINT_BASE = 0xb556e8f43fb4eb9bL;
 
        static acrobatic_lcmt()
        {
            LCM_FINGERPRINT = _hashRecursive(new List<String>());
        }
 
        public static ulong _hashRecursive(List<String> classes)
        {
            if (classes.Contains("LCMTypes.acrobatic_lcmt"))
                return 0L;
 
            classes.Add("LCMTypes.acrobatic_lcmt");
            ulong hash = LCM_FINGERPRINT_BASE
                ;
            classes.RemoveAt(classes.Count - 1);
            return (hash<<1) + ((hash>>63)&1);
        }
 
        public void Encode(LCMDataOutputStream outs)
        {
            outs.Write((long) LCM_FINGERPRINT);
            _encodeRecursive(outs);
        }
 
        public void _encodeRecursive(LCMDataOutputStream outs)
        {
            outs.Write(this.time); 
 
            outs.Write(this.iter); 
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.pcom_est[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.pbody_est[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.rpy_est[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.vcom_est[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.omegaBody_est[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.h_est[a]); 
            }
 
            for (int a = 0; a < 12; a++) {
                outs.Write(this.pfoot_est[a]); 
            }
 
            for (int a = 0; a < 12; a++) {
                outs.Write(this.pfoot_leg_controller_est[a]); 
            }
 
            for (int a = 0; a < 12; a++) {
                outs.Write(this.q_est[a]); 
            }
 
            for (int a = 0; a < 12; a++) {
                outs.Write(this.qd_est[a]); 
            }
 
            for (int a = 0; a < 12; a++) {
                outs.Write(this.tau_est[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.pcom_ref[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.pbody_ref[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.rpy_ref[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.vcom_ref[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.omegaBody_ref[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.h_ref[a]); 
            }
 
            for (int a = 0; a < 12; a++) {
                outs.Write(this.pfoot_ref[a]); 
            }
 
            for (int a = 0; a < 12; a++) {
                outs.Write(this.pfoot_leg_controller_ref[a]); 
            }
 
            for (int a = 0; a < 12; a++) {
                outs.Write(this.q_ref[a]); 
            }
 
            for (int a = 0; a < 12; a++) {
                outs.Write(this.qd_ref[a]); 
            }
 
            for (int a = 0; a < 12; a++) {
                outs.Write(this.tau_ref[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.pbody_TO[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.rpy_TO[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.vcom_TO[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.omegaBody_TO[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.h_TO[a]); 
            }
 
            for (int a = 0; a < 12; a++) {
                outs.Write(this.u_ref[a]); 
            }
 
            for (int a = 0; a < 12; a++) {
                outs.Write(this.u_TO[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.cs_ref[a]); 
            }
 
            for (int a = 0; a < 12; a++) {
                outs.Write(this.f_ff[a]); 
            }
 
            for (int a = 0; a < 24; a++) {
                outs.Write(this.linear_error[a]); 
            }
 
            for (int a = 0; a < 12; a++) {
                outs.Write(this.delta_u[a]); 
            }
 
            for (int a = 0; a < 12; a++) {
                outs.Write(this.gQP[a]); 
            }
 
            for (int a = 0; a < 12; a++) {
                outs.Write(this.lbQP[a]); 
            }
 
            for (int a = 0; a < 12; a++) {
                outs.Write(this.ubQP[a]); 
            }
 
            for (int a = 0; a < 20; a++) {
                outs.Write(this.lbAQP[a]); 
            }
 
            for (int a = 0; a < 20; a++) {
                outs.Write(this.ubAQP[a]); 
            }
 
            for (int a = 0; a < 576; a++) {
                outs.Write(this.Prde[a]); 
            }
 
        }
 
        public acrobatic_lcmt(byte[] data) : this(new LCMDataInputStream(data))
        {
        }
 
        public acrobatic_lcmt(LCMDataInputStream ins)
        {
            if ((ulong) ins.ReadInt64() != LCM_FINGERPRINT)
                throw new System.IO.IOException("LCM Decode error: bad fingerprint");
 
            _decodeRecursive(ins);
        }
 
        public static LCMTypes.acrobatic_lcmt _decodeRecursiveFactory(LCMDataInputStream ins)
        {
            LCMTypes.acrobatic_lcmt o = new LCMTypes.acrobatic_lcmt();
            o._decodeRecursive(ins);
            return o;
        }
 
        public void _decodeRecursive(LCMDataInputStream ins)
        {
            this.time = ins.ReadSingle();
 
            this.iter = ins.ReadInt32();
 
            this.pcom_est = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.pcom_est[a] = ins.ReadSingle();
            }
 
            this.pbody_est = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.pbody_est[a] = ins.ReadSingle();
            }
 
            this.rpy_est = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.rpy_est[a] = ins.ReadSingle();
            }
 
            this.vcom_est = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.vcom_est[a] = ins.ReadSingle();
            }
 
            this.omegaBody_est = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.omegaBody_est[a] = ins.ReadSingle();
            }
 
            this.h_est = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.h_est[a] = ins.ReadSingle();
            }
 
            this.pfoot_est = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                this.pfoot_est[a] = ins.ReadSingle();
            }
 
            this.pfoot_leg_controller_est = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                this.pfoot_leg_controller_est[a] = ins.ReadSingle();
            }
 
            this.q_est = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                this.q_est[a] = ins.ReadSingle();
            }
 
            this.qd_est = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                this.qd_est[a] = ins.ReadSingle();
            }
 
            this.tau_est = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                this.tau_est[a] = ins.ReadSingle();
            }
 
            this.pcom_ref = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.pcom_ref[a] = ins.ReadSingle();
            }
 
            this.pbody_ref = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.pbody_ref[a] = ins.ReadSingle();
            }
 
            this.rpy_ref = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.rpy_ref[a] = ins.ReadSingle();
            }
 
            this.vcom_ref = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.vcom_ref[a] = ins.ReadSingle();
            }
 
            this.omegaBody_ref = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.omegaBody_ref[a] = ins.ReadSingle();
            }
 
            this.h_ref = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.h_ref[a] = ins.ReadSingle();
            }
 
            this.pfoot_ref = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                this.pfoot_ref[a] = ins.ReadSingle();
            }
 
            this.pfoot_leg_controller_ref = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                this.pfoot_leg_controller_ref[a] = ins.ReadSingle();
            }
 
            this.q_ref = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                this.q_ref[a] = ins.ReadSingle();
            }
 
            this.qd_ref = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                this.qd_ref[a] = ins.ReadSingle();
            }
 
            this.tau_ref = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                this.tau_ref[a] = ins.ReadSingle();
            }
 
            this.pbody_TO = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.pbody_TO[a] = ins.ReadSingle();
            }
 
            this.rpy_TO = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.rpy_TO[a] = ins.ReadSingle();
            }
 
            this.vcom_TO = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.vcom_TO[a] = ins.ReadSingle();
            }
 
            this.omegaBody_TO = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.omegaBody_TO[a] = ins.ReadSingle();
            }
 
            this.h_TO = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.h_TO[a] = ins.ReadSingle();
            }
 
            this.u_ref = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                this.u_ref[a] = ins.ReadSingle();
            }
 
            this.u_TO = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                this.u_TO[a] = ins.ReadSingle();
            }
 
            this.cs_ref = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.cs_ref[a] = ins.ReadSingle();
            }
 
            this.f_ff = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                this.f_ff[a] = ins.ReadSingle();
            }
 
            this.linear_error = new float[(int) 24];
            for (int a = 0; a < 24; a++) {
                this.linear_error[a] = ins.ReadSingle();
            }
 
            this.delta_u = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                this.delta_u[a] = ins.ReadSingle();
            }
 
            this.gQP = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                this.gQP[a] = ins.ReadSingle();
            }
 
            this.lbQP = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                this.lbQP[a] = ins.ReadSingle();
            }
 
            this.ubQP = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                this.ubQP[a] = ins.ReadSingle();
            }
 
            this.lbAQP = new float[(int) 20];
            for (int a = 0; a < 20; a++) {
                this.lbAQP[a] = ins.ReadSingle();
            }
 
            this.ubAQP = new float[(int) 20];
            for (int a = 0; a < 20; a++) {
                this.ubAQP[a] = ins.ReadSingle();
            }
 
            this.Prde = new float[(int) 576];
            for (int a = 0; a < 576; a++) {
                this.Prde[a] = ins.ReadSingle();
            }
 
        }
 
        public LCMTypes.acrobatic_lcmt Copy()
        {
            LCMTypes.acrobatic_lcmt outobj = new LCMTypes.acrobatic_lcmt();
            outobj.time = this.time;
 
            outobj.iter = this.iter;
 
            outobj.pcom_est = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.pcom_est[a] = this.pcom_est[a];
            }
 
            outobj.pbody_est = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.pbody_est[a] = this.pbody_est[a];
            }
 
            outobj.rpy_est = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.rpy_est[a] = this.rpy_est[a];
            }
 
            outobj.vcom_est = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.vcom_est[a] = this.vcom_est[a];
            }
 
            outobj.omegaBody_est = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.omegaBody_est[a] = this.omegaBody_est[a];
            }
 
            outobj.h_est = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.h_est[a] = this.h_est[a];
            }
 
            outobj.pfoot_est = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                outobj.pfoot_est[a] = this.pfoot_est[a];
            }
 
            outobj.pfoot_leg_controller_est = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                outobj.pfoot_leg_controller_est[a] = this.pfoot_leg_controller_est[a];
            }
 
            outobj.q_est = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                outobj.q_est[a] = this.q_est[a];
            }
 
            outobj.qd_est = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                outobj.qd_est[a] = this.qd_est[a];
            }
 
            outobj.tau_est = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                outobj.tau_est[a] = this.tau_est[a];
            }
 
            outobj.pcom_ref = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.pcom_ref[a] = this.pcom_ref[a];
            }
 
            outobj.pbody_ref = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.pbody_ref[a] = this.pbody_ref[a];
            }
 
            outobj.rpy_ref = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.rpy_ref[a] = this.rpy_ref[a];
            }
 
            outobj.vcom_ref = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.vcom_ref[a] = this.vcom_ref[a];
            }
 
            outobj.omegaBody_ref = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.omegaBody_ref[a] = this.omegaBody_ref[a];
            }
 
            outobj.h_ref = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.h_ref[a] = this.h_ref[a];
            }
 
            outobj.pfoot_ref = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                outobj.pfoot_ref[a] = this.pfoot_ref[a];
            }
 
            outobj.pfoot_leg_controller_ref = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                outobj.pfoot_leg_controller_ref[a] = this.pfoot_leg_controller_ref[a];
            }
 
            outobj.q_ref = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                outobj.q_ref[a] = this.q_ref[a];
            }
 
            outobj.qd_ref = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                outobj.qd_ref[a] = this.qd_ref[a];
            }
 
            outobj.tau_ref = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                outobj.tau_ref[a] = this.tau_ref[a];
            }
 
            outobj.pbody_TO = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.pbody_TO[a] = this.pbody_TO[a];
            }
 
            outobj.rpy_TO = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.rpy_TO[a] = this.rpy_TO[a];
            }
 
            outobj.vcom_TO = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.vcom_TO[a] = this.vcom_TO[a];
            }
 
            outobj.omegaBody_TO = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.omegaBody_TO[a] = this.omegaBody_TO[a];
            }
 
            outobj.h_TO = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.h_TO[a] = this.h_TO[a];
            }
 
            outobj.u_ref = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                outobj.u_ref[a] = this.u_ref[a];
            }
 
            outobj.u_TO = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                outobj.u_TO[a] = this.u_TO[a];
            }
 
            outobj.cs_ref = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.cs_ref[a] = this.cs_ref[a];
            }
 
            outobj.f_ff = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                outobj.f_ff[a] = this.f_ff[a];
            }
 
            outobj.linear_error = new float[(int) 24];
            for (int a = 0; a < 24; a++) {
                outobj.linear_error[a] = this.linear_error[a];
            }
 
            outobj.delta_u = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                outobj.delta_u[a] = this.delta_u[a];
            }
 
            outobj.gQP = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                outobj.gQP[a] = this.gQP[a];
            }
 
            outobj.lbQP = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                outobj.lbQP[a] = this.lbQP[a];
            }
 
            outobj.ubQP = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                outobj.ubQP[a] = this.ubQP[a];
            }
 
            outobj.lbAQP = new float[(int) 20];
            for (int a = 0; a < 20; a++) {
                outobj.lbAQP[a] = this.lbAQP[a];
            }
 
            outobj.ubAQP = new float[(int) 20];
            for (int a = 0; a < 20; a++) {
                outobj.ubAQP[a] = this.ubAQP[a];
            }
 
            outobj.Prde = new float[(int) 576];
            for (int a = 0; a < 576; a++) {
                outobj.Prde[a] = this.Prde[a];
            }
 
            return outobj;
        }
    }
}

