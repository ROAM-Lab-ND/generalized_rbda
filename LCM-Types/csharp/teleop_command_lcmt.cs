/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

using System;
using System.Collections.Generic;
using System.IO;
using LCM.LCM;
 
namespace LCMTypes
{
    public sealed class teleop_command_lcmt : LCM.LCM.LCMEncodable
    {
        public float[] q_des_base;
        public float[] q_des_shoulderx;
        public float[] q_des_shouldery;
        public float[] q_des_elbow;
        public float[] q_des_wristpitch;
        public float[] q_des_wristroll;
        public float[] q_des_gripper;
        public float[] qd_des_base;
        public float[] qd_des_shoulderx;
        public float[] qd_des_shouldery;
        public float[] qd_des_elbow;
        public float[] qd_des_wristpitch;
        public float[] qd_des_wristroll;
        public float[] qd_des_gripper;
        public float[] kp_base;
        public float[] kp_shoulderx;
        public float[] kp_shouldery;
        public float[] kp_elbow;
        public float[] kp_wristpitch;
        public float[] kp_wristroll;
        public float[] kp_gripper;
        public float[] kd_base;
        public float[] kd_shoulderx;
        public float[] kd_shouldery;
        public float[] kd_elbow;
        public float[] kd_wristpitch;
        public float[] kd_wristroll;
        public float[] kd_gripper;
        public float[] tau_base;
        public float[] tau_shoulderx;
        public float[] tau_shouldery;
        public float[] tau_elbow;
        public float[] tau_wristpitch;
        public float[] tau_wristroll;
        public float[] tau_gripper;
        public int[] flags;
 
        public teleop_command_lcmt()
        {
            q_des_base = new float[1];
            q_des_shoulderx = new float[1];
            q_des_shouldery = new float[1];
            q_des_elbow = new float[1];
            q_des_wristpitch = new float[1];
            q_des_wristroll = new float[1];
            q_des_gripper = new float[1];
            qd_des_base = new float[1];
            qd_des_shoulderx = new float[1];
            qd_des_shouldery = new float[1];
            qd_des_elbow = new float[1];
            qd_des_wristpitch = new float[1];
            qd_des_wristroll = new float[1];
            qd_des_gripper = new float[1];
            kp_base = new float[1];
            kp_shoulderx = new float[1];
            kp_shouldery = new float[1];
            kp_elbow = new float[1];
            kp_wristpitch = new float[1];
            kp_wristroll = new float[1];
            kp_gripper = new float[1];
            kd_base = new float[1];
            kd_shoulderx = new float[1];
            kd_shouldery = new float[1];
            kd_elbow = new float[1];
            kd_wristpitch = new float[1];
            kd_wristroll = new float[1];
            kd_gripper = new float[1];
            tau_base = new float[1];
            tau_shoulderx = new float[1];
            tau_shouldery = new float[1];
            tau_elbow = new float[1];
            tau_wristpitch = new float[1];
            tau_wristroll = new float[1];
            tau_gripper = new float[1];
            flags = new int[4];
        }
 
        public static readonly ulong LCM_FINGERPRINT;
        public static readonly ulong LCM_FINGERPRINT_BASE = 0xc33069e635c9ea0cL;
 
        static teleop_command_lcmt()
        {
            LCM_FINGERPRINT = _hashRecursive(new List<String>());
        }
 
        public static ulong _hashRecursive(List<String> classes)
        {
            if (classes.Contains("LCMTypes.teleop_command_lcmt"))
                return 0L;
 
            classes.Add("LCMTypes.teleop_command_lcmt");
            ulong hash = LCM_FINGERPRINT_BASE
                ;
            classes.RemoveAt(classes.Count - 1);
            return (hash<<1) + ((hash>>63)&1);
        }
 
        public void Encode(LCMDataOutputStream outs)
        {
            outs.Write((long) LCM_FINGERPRINT);
            _encodeRecursive(outs);
        }
 
        public void _encodeRecursive(LCMDataOutputStream outs)
        {
            for (int a = 0; a < 1; a++) {
                outs.Write(this.q_des_base[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.q_des_shoulderx[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.q_des_shouldery[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.q_des_elbow[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.q_des_wristpitch[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.q_des_wristroll[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.q_des_gripper[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.qd_des_base[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.qd_des_shoulderx[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.qd_des_shouldery[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.qd_des_elbow[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.qd_des_wristpitch[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.qd_des_wristroll[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.qd_des_gripper[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.kp_base[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.kp_shoulderx[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.kp_shouldery[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.kp_elbow[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.kp_wristpitch[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.kp_wristroll[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.kp_gripper[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.kd_base[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.kd_shoulderx[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.kd_shouldery[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.kd_elbow[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.kd_wristpitch[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.kd_wristroll[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.kd_gripper[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.tau_base[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.tau_shoulderx[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.tau_shouldery[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.tau_elbow[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.tau_wristpitch[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.tau_wristroll[a]); 
            }
 
            for (int a = 0; a < 1; a++) {
                outs.Write(this.tau_gripper[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.flags[a]); 
            }
 
        }
 
        public teleop_command_lcmt(byte[] data) : this(new LCMDataInputStream(data))
        {
        }
 
        public teleop_command_lcmt(LCMDataInputStream ins)
        {
            if ((ulong) ins.ReadInt64() != LCM_FINGERPRINT)
                throw new System.IO.IOException("LCM Decode error: bad fingerprint");
 
            _decodeRecursive(ins);
        }
 
        public static LCMTypes.teleop_command_lcmt _decodeRecursiveFactory(LCMDataInputStream ins)
        {
            LCMTypes.teleop_command_lcmt o = new LCMTypes.teleop_command_lcmt();
            o._decodeRecursive(ins);
            return o;
        }
 
        public void _decodeRecursive(LCMDataInputStream ins)
        {
            this.q_des_base = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.q_des_base[a] = ins.ReadSingle();
            }
 
            this.q_des_shoulderx = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.q_des_shoulderx[a] = ins.ReadSingle();
            }
 
            this.q_des_shouldery = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.q_des_shouldery[a] = ins.ReadSingle();
            }
 
            this.q_des_elbow = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.q_des_elbow[a] = ins.ReadSingle();
            }
 
            this.q_des_wristpitch = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.q_des_wristpitch[a] = ins.ReadSingle();
            }
 
            this.q_des_wristroll = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.q_des_wristroll[a] = ins.ReadSingle();
            }
 
            this.q_des_gripper = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.q_des_gripper[a] = ins.ReadSingle();
            }
 
            this.qd_des_base = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.qd_des_base[a] = ins.ReadSingle();
            }
 
            this.qd_des_shoulderx = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.qd_des_shoulderx[a] = ins.ReadSingle();
            }
 
            this.qd_des_shouldery = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.qd_des_shouldery[a] = ins.ReadSingle();
            }
 
            this.qd_des_elbow = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.qd_des_elbow[a] = ins.ReadSingle();
            }
 
            this.qd_des_wristpitch = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.qd_des_wristpitch[a] = ins.ReadSingle();
            }
 
            this.qd_des_wristroll = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.qd_des_wristroll[a] = ins.ReadSingle();
            }
 
            this.qd_des_gripper = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.qd_des_gripper[a] = ins.ReadSingle();
            }
 
            this.kp_base = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.kp_base[a] = ins.ReadSingle();
            }
 
            this.kp_shoulderx = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.kp_shoulderx[a] = ins.ReadSingle();
            }
 
            this.kp_shouldery = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.kp_shouldery[a] = ins.ReadSingle();
            }
 
            this.kp_elbow = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.kp_elbow[a] = ins.ReadSingle();
            }
 
            this.kp_wristpitch = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.kp_wristpitch[a] = ins.ReadSingle();
            }
 
            this.kp_wristroll = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.kp_wristroll[a] = ins.ReadSingle();
            }
 
            this.kp_gripper = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.kp_gripper[a] = ins.ReadSingle();
            }
 
            this.kd_base = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.kd_base[a] = ins.ReadSingle();
            }
 
            this.kd_shoulderx = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.kd_shoulderx[a] = ins.ReadSingle();
            }
 
            this.kd_shouldery = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.kd_shouldery[a] = ins.ReadSingle();
            }
 
            this.kd_elbow = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.kd_elbow[a] = ins.ReadSingle();
            }
 
            this.kd_wristpitch = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.kd_wristpitch[a] = ins.ReadSingle();
            }
 
            this.kd_wristroll = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.kd_wristroll[a] = ins.ReadSingle();
            }
 
            this.kd_gripper = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.kd_gripper[a] = ins.ReadSingle();
            }
 
            this.tau_base = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.tau_base[a] = ins.ReadSingle();
            }
 
            this.tau_shoulderx = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.tau_shoulderx[a] = ins.ReadSingle();
            }
 
            this.tau_shouldery = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.tau_shouldery[a] = ins.ReadSingle();
            }
 
            this.tau_elbow = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.tau_elbow[a] = ins.ReadSingle();
            }
 
            this.tau_wristpitch = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.tau_wristpitch[a] = ins.ReadSingle();
            }
 
            this.tau_wristroll = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.tau_wristroll[a] = ins.ReadSingle();
            }
 
            this.tau_gripper = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                this.tau_gripper[a] = ins.ReadSingle();
            }
 
            this.flags = new int[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.flags[a] = ins.ReadInt32();
            }
 
        }
 
        public LCMTypes.teleop_command_lcmt Copy()
        {
            LCMTypes.teleop_command_lcmt outobj = new LCMTypes.teleop_command_lcmt();
            outobj.q_des_base = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.q_des_base[a] = this.q_des_base[a];
            }
 
            outobj.q_des_shoulderx = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.q_des_shoulderx[a] = this.q_des_shoulderx[a];
            }
 
            outobj.q_des_shouldery = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.q_des_shouldery[a] = this.q_des_shouldery[a];
            }
 
            outobj.q_des_elbow = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.q_des_elbow[a] = this.q_des_elbow[a];
            }
 
            outobj.q_des_wristpitch = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.q_des_wristpitch[a] = this.q_des_wristpitch[a];
            }
 
            outobj.q_des_wristroll = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.q_des_wristroll[a] = this.q_des_wristroll[a];
            }
 
            outobj.q_des_gripper = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.q_des_gripper[a] = this.q_des_gripper[a];
            }
 
            outobj.qd_des_base = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.qd_des_base[a] = this.qd_des_base[a];
            }
 
            outobj.qd_des_shoulderx = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.qd_des_shoulderx[a] = this.qd_des_shoulderx[a];
            }
 
            outobj.qd_des_shouldery = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.qd_des_shouldery[a] = this.qd_des_shouldery[a];
            }
 
            outobj.qd_des_elbow = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.qd_des_elbow[a] = this.qd_des_elbow[a];
            }
 
            outobj.qd_des_wristpitch = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.qd_des_wristpitch[a] = this.qd_des_wristpitch[a];
            }
 
            outobj.qd_des_wristroll = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.qd_des_wristroll[a] = this.qd_des_wristroll[a];
            }
 
            outobj.qd_des_gripper = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.qd_des_gripper[a] = this.qd_des_gripper[a];
            }
 
            outobj.kp_base = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.kp_base[a] = this.kp_base[a];
            }
 
            outobj.kp_shoulderx = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.kp_shoulderx[a] = this.kp_shoulderx[a];
            }
 
            outobj.kp_shouldery = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.kp_shouldery[a] = this.kp_shouldery[a];
            }
 
            outobj.kp_elbow = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.kp_elbow[a] = this.kp_elbow[a];
            }
 
            outobj.kp_wristpitch = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.kp_wristpitch[a] = this.kp_wristpitch[a];
            }
 
            outobj.kp_wristroll = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.kp_wristroll[a] = this.kp_wristroll[a];
            }
 
            outobj.kp_gripper = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.kp_gripper[a] = this.kp_gripper[a];
            }
 
            outobj.kd_base = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.kd_base[a] = this.kd_base[a];
            }
 
            outobj.kd_shoulderx = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.kd_shoulderx[a] = this.kd_shoulderx[a];
            }
 
            outobj.kd_shouldery = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.kd_shouldery[a] = this.kd_shouldery[a];
            }
 
            outobj.kd_elbow = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.kd_elbow[a] = this.kd_elbow[a];
            }
 
            outobj.kd_wristpitch = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.kd_wristpitch[a] = this.kd_wristpitch[a];
            }
 
            outobj.kd_wristroll = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.kd_wristroll[a] = this.kd_wristroll[a];
            }
 
            outobj.kd_gripper = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.kd_gripper[a] = this.kd_gripper[a];
            }
 
            outobj.tau_base = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.tau_base[a] = this.tau_base[a];
            }
 
            outobj.tau_shoulderx = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.tau_shoulderx[a] = this.tau_shoulderx[a];
            }
 
            outobj.tau_shouldery = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.tau_shouldery[a] = this.tau_shouldery[a];
            }
 
            outobj.tau_elbow = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.tau_elbow[a] = this.tau_elbow[a];
            }
 
            outobj.tau_wristpitch = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.tau_wristpitch[a] = this.tau_wristpitch[a];
            }
 
            outobj.tau_wristroll = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.tau_wristroll[a] = this.tau_wristroll[a];
            }
 
            outobj.tau_gripper = new float[(int) 1];
            for (int a = 0; a < 1; a++) {
                outobj.tau_gripper[a] = this.tau_gripper[a];
            }
 
            outobj.flags = new int[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.flags[a] = this.flags[a];
            }
 
            return outobj;
        }
    }
}

