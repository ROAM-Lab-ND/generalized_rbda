/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

using System;
using System.Collections.Generic;
using System.IO;
using LCM.LCM;
 
namespace LCMTypes
{
    public sealed class humanoid_acrobatic_lcmt : LCM.LCM.LCMEncodable
    {
        public float time;
        public int iter;
        public float[] pbody_cmd;
        public float[] vbody_cmd;
        public float[] abody_cmd;
        public float[] rpy_cmd;
        public float[] omegaBody_cmd;
        public float[] pcom_cmd;
        public float[] vcom_cmd;
        public float[] acom_cmd;
        public float[] jpos_cmd;
        public float[] jvel_cmd;
        public float[] Fr_cmd;
        public float[] pfoot_cmd;
        public float[] contact_state;
        public float[] pbody_est;
        public float[] vbody_est;
        public float[] rpy_est;
        public float[] omegaBody_est;
        public float[] pcom_est;
        public float[] vcom_est;
        public float[] jpos_est;
        public float[] jvel_est;
        public float[] pfoot_est;
 
        public humanoid_acrobatic_lcmt()
        {
            pbody_cmd = new float[3];
            vbody_cmd = new float[3];
            abody_cmd = new float[3];
            rpy_cmd = new float[3];
            omegaBody_cmd = new float[3];
            pcom_cmd = new float[3];
            vcom_cmd = new float[3];
            acom_cmd = new float[3];
            jpos_cmd = new float[18];
            jvel_cmd = new float[18];
            Fr_cmd = new float[12];
            pfoot_cmd = new float[12];
            contact_state = new float[4];
            pbody_est = new float[3];
            vbody_est = new float[3];
            rpy_est = new float[3];
            omegaBody_est = new float[3];
            pcom_est = new float[3];
            vcom_est = new float[3];
            jpos_est = new float[18];
            jvel_est = new float[18];
            pfoot_est = new float[12];
        }
 
        public static readonly ulong LCM_FINGERPRINT;
        public static readonly ulong LCM_FINGERPRINT_BASE = 0xc72c14ddbc40bc23L;
 
        static humanoid_acrobatic_lcmt()
        {
            LCM_FINGERPRINT = _hashRecursive(new List<String>());
        }
 
        public static ulong _hashRecursive(List<String> classes)
        {
            if (classes.Contains("LCMTypes.humanoid_acrobatic_lcmt"))
                return 0L;
 
            classes.Add("LCMTypes.humanoid_acrobatic_lcmt");
            ulong hash = LCM_FINGERPRINT_BASE
                ;
            classes.RemoveAt(classes.Count - 1);
            return (hash<<1) + ((hash>>63)&1);
        }
 
        public void Encode(LCMDataOutputStream outs)
        {
            outs.Write((long) LCM_FINGERPRINT);
            _encodeRecursive(outs);
        }
 
        public void _encodeRecursive(LCMDataOutputStream outs)
        {
            outs.Write(this.time); 
 
            outs.Write(this.iter); 
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.pbody_cmd[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.vbody_cmd[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.abody_cmd[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.rpy_cmd[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.omegaBody_cmd[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.pcom_cmd[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.vcom_cmd[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.acom_cmd[a]); 
            }
 
            for (int a = 0; a < 18; a++) {
                outs.Write(this.jpos_cmd[a]); 
            }
 
            for (int a = 0; a < 18; a++) {
                outs.Write(this.jvel_cmd[a]); 
            }
 
            for (int a = 0; a < 12; a++) {
                outs.Write(this.Fr_cmd[a]); 
            }
 
            for (int a = 0; a < 12; a++) {
                outs.Write(this.pfoot_cmd[a]); 
            }
 
            for (int a = 0; a < 4; a++) {
                outs.Write(this.contact_state[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.pbody_est[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.vbody_est[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.rpy_est[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.omegaBody_est[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.pcom_est[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.vcom_est[a]); 
            }
 
            for (int a = 0; a < 18; a++) {
                outs.Write(this.jpos_est[a]); 
            }
 
            for (int a = 0; a < 18; a++) {
                outs.Write(this.jvel_est[a]); 
            }
 
            for (int a = 0; a < 12; a++) {
                outs.Write(this.pfoot_est[a]); 
            }
 
        }
 
        public humanoid_acrobatic_lcmt(byte[] data) : this(new LCMDataInputStream(data))
        {
        }
 
        public humanoid_acrobatic_lcmt(LCMDataInputStream ins)
        {
            if ((ulong) ins.ReadInt64() != LCM_FINGERPRINT)
                throw new System.IO.IOException("LCM Decode error: bad fingerprint");
 
            _decodeRecursive(ins);
        }
 
        public static LCMTypes.humanoid_acrobatic_lcmt _decodeRecursiveFactory(LCMDataInputStream ins)
        {
            LCMTypes.humanoid_acrobatic_lcmt o = new LCMTypes.humanoid_acrobatic_lcmt();
            o._decodeRecursive(ins);
            return o;
        }
 
        public void _decodeRecursive(LCMDataInputStream ins)
        {
            this.time = ins.ReadSingle();
 
            this.iter = ins.ReadInt32();
 
            this.pbody_cmd = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.pbody_cmd[a] = ins.ReadSingle();
            }
 
            this.vbody_cmd = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.vbody_cmd[a] = ins.ReadSingle();
            }
 
            this.abody_cmd = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.abody_cmd[a] = ins.ReadSingle();
            }
 
            this.rpy_cmd = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.rpy_cmd[a] = ins.ReadSingle();
            }
 
            this.omegaBody_cmd = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.omegaBody_cmd[a] = ins.ReadSingle();
            }
 
            this.pcom_cmd = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.pcom_cmd[a] = ins.ReadSingle();
            }
 
            this.vcom_cmd = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.vcom_cmd[a] = ins.ReadSingle();
            }
 
            this.acom_cmd = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.acom_cmd[a] = ins.ReadSingle();
            }
 
            this.jpos_cmd = new float[(int) 18];
            for (int a = 0; a < 18; a++) {
                this.jpos_cmd[a] = ins.ReadSingle();
            }
 
            this.jvel_cmd = new float[(int) 18];
            for (int a = 0; a < 18; a++) {
                this.jvel_cmd[a] = ins.ReadSingle();
            }
 
            this.Fr_cmd = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                this.Fr_cmd[a] = ins.ReadSingle();
            }
 
            this.pfoot_cmd = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                this.pfoot_cmd[a] = ins.ReadSingle();
            }
 
            this.contact_state = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                this.contact_state[a] = ins.ReadSingle();
            }
 
            this.pbody_est = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.pbody_est[a] = ins.ReadSingle();
            }
 
            this.vbody_est = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.vbody_est[a] = ins.ReadSingle();
            }
 
            this.rpy_est = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.rpy_est[a] = ins.ReadSingle();
            }
 
            this.omegaBody_est = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.omegaBody_est[a] = ins.ReadSingle();
            }
 
            this.pcom_est = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.pcom_est[a] = ins.ReadSingle();
            }
 
            this.vcom_est = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.vcom_est[a] = ins.ReadSingle();
            }
 
            this.jpos_est = new float[(int) 18];
            for (int a = 0; a < 18; a++) {
                this.jpos_est[a] = ins.ReadSingle();
            }
 
            this.jvel_est = new float[(int) 18];
            for (int a = 0; a < 18; a++) {
                this.jvel_est[a] = ins.ReadSingle();
            }
 
            this.pfoot_est = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                this.pfoot_est[a] = ins.ReadSingle();
            }
 
        }
 
        public LCMTypes.humanoid_acrobatic_lcmt Copy()
        {
            LCMTypes.humanoid_acrobatic_lcmt outobj = new LCMTypes.humanoid_acrobatic_lcmt();
            outobj.time = this.time;
 
            outobj.iter = this.iter;
 
            outobj.pbody_cmd = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.pbody_cmd[a] = this.pbody_cmd[a];
            }
 
            outobj.vbody_cmd = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.vbody_cmd[a] = this.vbody_cmd[a];
            }
 
            outobj.abody_cmd = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.abody_cmd[a] = this.abody_cmd[a];
            }
 
            outobj.rpy_cmd = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.rpy_cmd[a] = this.rpy_cmd[a];
            }
 
            outobj.omegaBody_cmd = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.omegaBody_cmd[a] = this.omegaBody_cmd[a];
            }
 
            outobj.pcom_cmd = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.pcom_cmd[a] = this.pcom_cmd[a];
            }
 
            outobj.vcom_cmd = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.vcom_cmd[a] = this.vcom_cmd[a];
            }
 
            outobj.acom_cmd = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.acom_cmd[a] = this.acom_cmd[a];
            }
 
            outobj.jpos_cmd = new float[(int) 18];
            for (int a = 0; a < 18; a++) {
                outobj.jpos_cmd[a] = this.jpos_cmd[a];
            }
 
            outobj.jvel_cmd = new float[(int) 18];
            for (int a = 0; a < 18; a++) {
                outobj.jvel_cmd[a] = this.jvel_cmd[a];
            }
 
            outobj.Fr_cmd = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                outobj.Fr_cmd[a] = this.Fr_cmd[a];
            }
 
            outobj.pfoot_cmd = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                outobj.pfoot_cmd[a] = this.pfoot_cmd[a];
            }
 
            outobj.contact_state = new float[(int) 4];
            for (int a = 0; a < 4; a++) {
                outobj.contact_state[a] = this.contact_state[a];
            }
 
            outobj.pbody_est = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.pbody_est[a] = this.pbody_est[a];
            }
 
            outobj.vbody_est = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.vbody_est[a] = this.vbody_est[a];
            }
 
            outobj.rpy_est = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.rpy_est[a] = this.rpy_est[a];
            }
 
            outobj.omegaBody_est = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.omegaBody_est[a] = this.omegaBody_est[a];
            }
 
            outobj.pcom_est = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.pcom_est[a] = this.pcom_est[a];
            }
 
            outobj.vcom_est = new float[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.vcom_est[a] = this.vcom_est[a];
            }
 
            outobj.jpos_est = new float[(int) 18];
            for (int a = 0; a < 18; a++) {
                outobj.jpos_est[a] = this.jpos_est[a];
            }
 
            outobj.jvel_est = new float[(int) 18];
            for (int a = 0; a < 18; a++) {
                outobj.jvel_est[a] = this.jvel_est[a];
            }
 
            outobj.pfoot_est = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                outobj.pfoot_est[a] = this.pfoot_est[a];
            }
 
            return outobj;
        }
    }
}

