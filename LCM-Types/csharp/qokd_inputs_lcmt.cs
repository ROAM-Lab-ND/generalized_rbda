/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

using System;
using System.Collections.Generic;
using System.IO;
using LCM.LCM;
 
namespace LCMTypes
{
    public sealed class qokd_inputs_lcmt : LCM.LCM.LCMEncodable
    {
        public int NUM_U_TIMESTEPS;
        public int NUM_X_VAR_TRAJ;
        public int NUM_U_VAR_TRAJ;
        public int NUM_OPT_VAR_TRAJ;
        public int NUM_GC;
        public int NUM_GC_x3;
        public int NUM_GAIT_TABLE;
        public int NUM_FB_DOF;
        public double[] Xref;
        public double[] Uref;
        public double[] gait_schedule;
        public double[] dt_opt;
        public double mass;
        public double mu;
        public double[] f_max;
        public double[] q_min;
        public double[] q_max;
        public double[] qd_min;
        public double[] qd_max;
        public double[] q_init;
        public double[] qd_init;
        public double[] c_init;
        public double[] q_term_min;
        public double[] q_term_max;
        public double[] qd_term_min;
        public double[] qd_term_max;
        public double[] r_term_min;
        public double[] r_term_max;
        public double[] rd_term_min;
        public double[] rd_term_max;
        public double[] h_term_min;
        public double[] h_term_max;
        public double[] Qq;
        public double[] Qv;
        public double[] Qr;
        public double[] Qc;
        public double[] Qh;
        public double[] Qf;
        public double[] Qrdd;
        public double[] Qhd;
        public double[] QNq;
        public double[] QNv;
        public double[] QNr;
        public double[] QNc;
        public double[] QNh;
        public double[] init_guess;
 
        public qokd_inputs_lcmt()
        {
            q_init = new double[6];
            qd_init = new double[6];
            r_term_min = new double[3];
            r_term_max = new double[3];
            rd_term_min = new double[3];
            rd_term_max = new double[3];
            h_term_min = new double[3];
            h_term_max = new double[3];
            Qr = new double[6];
            Qh = new double[3];
            Qrdd = new double[3];
            Qhd = new double[3];
            QNr = new double[6];
            QNh = new double[3];
        }
 
        public static readonly ulong LCM_FINGERPRINT;
        public static readonly ulong LCM_FINGERPRINT_BASE = 0x36dd1fbfa2fb8c35L;
 
        static qokd_inputs_lcmt()
        {
            LCM_FINGERPRINT = _hashRecursive(new List<String>());
        }
 
        public static ulong _hashRecursive(List<String> classes)
        {
            if (classes.Contains("LCMTypes.qokd_inputs_lcmt"))
                return 0L;
 
            classes.Add("LCMTypes.qokd_inputs_lcmt");
            ulong hash = LCM_FINGERPRINT_BASE
                ;
            classes.RemoveAt(classes.Count - 1);
            return (hash<<1) + ((hash>>63)&1);
        }
 
        public void Encode(LCMDataOutputStream outs)
        {
            outs.Write((long) LCM_FINGERPRINT);
            _encodeRecursive(outs);
        }
 
        public void _encodeRecursive(LCMDataOutputStream outs)
        {
            outs.Write(this.NUM_U_TIMESTEPS); 
 
            outs.Write(this.NUM_X_VAR_TRAJ); 
 
            outs.Write(this.NUM_U_VAR_TRAJ); 
 
            outs.Write(this.NUM_OPT_VAR_TRAJ); 
 
            outs.Write(this.NUM_GC); 
 
            outs.Write(this.NUM_GC_x3); 
 
            outs.Write(this.NUM_GAIT_TABLE); 
 
            outs.Write(this.NUM_FB_DOF); 
 
            for (int a = 0; a < this.NUM_X_VAR_TRAJ; a++) {
                outs.Write(this.Xref[a]); 
            }
 
            for (int a = 0; a < this.NUM_U_VAR_TRAJ; a++) {
                outs.Write(this.Uref[a]); 
            }
 
            for (int a = 0; a < this.NUM_GAIT_TABLE; a++) {
                outs.Write(this.gait_schedule[a]); 
            }
 
            for (int a = 0; a < this.NUM_U_TIMESTEPS; a++) {
                outs.Write(this.dt_opt[a]); 
            }
 
            outs.Write(this.mass); 
 
            outs.Write(this.mu); 
 
            for (int a = 0; a < this.NUM_GC; a++) {
                outs.Write(this.f_max[a]); 
            }
 
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                outs.Write(this.q_min[a]); 
            }
 
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                outs.Write(this.q_max[a]); 
            }
 
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                outs.Write(this.qd_min[a]); 
            }
 
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                outs.Write(this.qd_max[a]); 
            }
 
            for (int a = 0; a < 6; a++) {
                outs.Write(this.q_init[a]); 
            }
 
            for (int a = 0; a < 6; a++) {
                outs.Write(this.qd_init[a]); 
            }
 
            for (int a = 0; a < this.NUM_GC_x3; a++) {
                outs.Write(this.c_init[a]); 
            }
 
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                outs.Write(this.q_term_min[a]); 
            }
 
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                outs.Write(this.q_term_max[a]); 
            }
 
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                outs.Write(this.qd_term_min[a]); 
            }
 
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                outs.Write(this.qd_term_max[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.r_term_min[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.r_term_max[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.rd_term_min[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.rd_term_max[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.h_term_min[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.h_term_max[a]); 
            }
 
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                outs.Write(this.Qq[a]); 
            }
 
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                outs.Write(this.Qv[a]); 
            }
 
            for (int a = 0; a < 6; a++) {
                outs.Write(this.Qr[a]); 
            }
 
            for (int a = 0; a < this.NUM_GC_x3; a++) {
                outs.Write(this.Qc[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.Qh[a]); 
            }
 
            for (int a = 0; a < this.NUM_GC_x3; a++) {
                outs.Write(this.Qf[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.Qrdd[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.Qhd[a]); 
            }
 
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                outs.Write(this.QNq[a]); 
            }
 
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                outs.Write(this.QNv[a]); 
            }
 
            for (int a = 0; a < 6; a++) {
                outs.Write(this.QNr[a]); 
            }
 
            for (int a = 0; a < this.NUM_GC_x3; a++) {
                outs.Write(this.QNc[a]); 
            }
 
            for (int a = 0; a < 3; a++) {
                outs.Write(this.QNh[a]); 
            }
 
            for (int a = 0; a < this.NUM_OPT_VAR_TRAJ; a++) {
                outs.Write(this.init_guess[a]); 
            }
 
        }
 
        public qokd_inputs_lcmt(byte[] data) : this(new LCMDataInputStream(data))
        {
        }
 
        public qokd_inputs_lcmt(LCMDataInputStream ins)
        {
            if ((ulong) ins.ReadInt64() != LCM_FINGERPRINT)
                throw new System.IO.IOException("LCM Decode error: bad fingerprint");
 
            _decodeRecursive(ins);
        }
 
        public static LCMTypes.qokd_inputs_lcmt _decodeRecursiveFactory(LCMDataInputStream ins)
        {
            LCMTypes.qokd_inputs_lcmt o = new LCMTypes.qokd_inputs_lcmt();
            o._decodeRecursive(ins);
            return o;
        }
 
        public void _decodeRecursive(LCMDataInputStream ins)
        {
            this.NUM_U_TIMESTEPS = ins.ReadInt32();
 
            this.NUM_X_VAR_TRAJ = ins.ReadInt32();
 
            this.NUM_U_VAR_TRAJ = ins.ReadInt32();
 
            this.NUM_OPT_VAR_TRAJ = ins.ReadInt32();
 
            this.NUM_GC = ins.ReadInt32();
 
            this.NUM_GC_x3 = ins.ReadInt32();
 
            this.NUM_GAIT_TABLE = ins.ReadInt32();
 
            this.NUM_FB_DOF = ins.ReadInt32();
 
            this.Xref = new double[(int) NUM_X_VAR_TRAJ];
            for (int a = 0; a < this.NUM_X_VAR_TRAJ; a++) {
                this.Xref[a] = ins.ReadDouble();
            }
 
            this.Uref = new double[(int) NUM_U_VAR_TRAJ];
            for (int a = 0; a < this.NUM_U_VAR_TRAJ; a++) {
                this.Uref[a] = ins.ReadDouble();
            }
 
            this.gait_schedule = new double[(int) NUM_GAIT_TABLE];
            for (int a = 0; a < this.NUM_GAIT_TABLE; a++) {
                this.gait_schedule[a] = ins.ReadDouble();
            }
 
            this.dt_opt = new double[(int) NUM_U_TIMESTEPS];
            for (int a = 0; a < this.NUM_U_TIMESTEPS; a++) {
                this.dt_opt[a] = ins.ReadDouble();
            }
 
            this.mass = ins.ReadDouble();
 
            this.mu = ins.ReadDouble();
 
            this.f_max = new double[(int) NUM_GC];
            for (int a = 0; a < this.NUM_GC; a++) {
                this.f_max[a] = ins.ReadDouble();
            }
 
            this.q_min = new double[(int) NUM_FB_DOF];
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                this.q_min[a] = ins.ReadDouble();
            }
 
            this.q_max = new double[(int) NUM_FB_DOF];
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                this.q_max[a] = ins.ReadDouble();
            }
 
            this.qd_min = new double[(int) NUM_FB_DOF];
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                this.qd_min[a] = ins.ReadDouble();
            }
 
            this.qd_max = new double[(int) NUM_FB_DOF];
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                this.qd_max[a] = ins.ReadDouble();
            }
 
            this.q_init = new double[(int) 6];
            for (int a = 0; a < 6; a++) {
                this.q_init[a] = ins.ReadDouble();
            }
 
            this.qd_init = new double[(int) 6];
            for (int a = 0; a < 6; a++) {
                this.qd_init[a] = ins.ReadDouble();
            }
 
            this.c_init = new double[(int) NUM_GC_x3];
            for (int a = 0; a < this.NUM_GC_x3; a++) {
                this.c_init[a] = ins.ReadDouble();
            }
 
            this.q_term_min = new double[(int) NUM_FB_DOF];
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                this.q_term_min[a] = ins.ReadDouble();
            }
 
            this.q_term_max = new double[(int) NUM_FB_DOF];
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                this.q_term_max[a] = ins.ReadDouble();
            }
 
            this.qd_term_min = new double[(int) NUM_FB_DOF];
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                this.qd_term_min[a] = ins.ReadDouble();
            }
 
            this.qd_term_max = new double[(int) NUM_FB_DOF];
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                this.qd_term_max[a] = ins.ReadDouble();
            }
 
            this.r_term_min = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.r_term_min[a] = ins.ReadDouble();
            }
 
            this.r_term_max = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.r_term_max[a] = ins.ReadDouble();
            }
 
            this.rd_term_min = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.rd_term_min[a] = ins.ReadDouble();
            }
 
            this.rd_term_max = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.rd_term_max[a] = ins.ReadDouble();
            }
 
            this.h_term_min = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.h_term_min[a] = ins.ReadDouble();
            }
 
            this.h_term_max = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.h_term_max[a] = ins.ReadDouble();
            }
 
            this.Qq = new double[(int) NUM_FB_DOF];
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                this.Qq[a] = ins.ReadDouble();
            }
 
            this.Qv = new double[(int) NUM_FB_DOF];
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                this.Qv[a] = ins.ReadDouble();
            }
 
            this.Qr = new double[(int) 6];
            for (int a = 0; a < 6; a++) {
                this.Qr[a] = ins.ReadDouble();
            }
 
            this.Qc = new double[(int) NUM_GC_x3];
            for (int a = 0; a < this.NUM_GC_x3; a++) {
                this.Qc[a] = ins.ReadDouble();
            }
 
            this.Qh = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.Qh[a] = ins.ReadDouble();
            }
 
            this.Qf = new double[(int) NUM_GC_x3];
            for (int a = 0; a < this.NUM_GC_x3; a++) {
                this.Qf[a] = ins.ReadDouble();
            }
 
            this.Qrdd = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.Qrdd[a] = ins.ReadDouble();
            }
 
            this.Qhd = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.Qhd[a] = ins.ReadDouble();
            }
 
            this.QNq = new double[(int) NUM_FB_DOF];
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                this.QNq[a] = ins.ReadDouble();
            }
 
            this.QNv = new double[(int) NUM_FB_DOF];
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                this.QNv[a] = ins.ReadDouble();
            }
 
            this.QNr = new double[(int) 6];
            for (int a = 0; a < 6; a++) {
                this.QNr[a] = ins.ReadDouble();
            }
 
            this.QNc = new double[(int) NUM_GC_x3];
            for (int a = 0; a < this.NUM_GC_x3; a++) {
                this.QNc[a] = ins.ReadDouble();
            }
 
            this.QNh = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                this.QNh[a] = ins.ReadDouble();
            }
 
            this.init_guess = new double[(int) NUM_OPT_VAR_TRAJ];
            for (int a = 0; a < this.NUM_OPT_VAR_TRAJ; a++) {
                this.init_guess[a] = ins.ReadDouble();
            }
 
        }
 
        public LCMTypes.qokd_inputs_lcmt Copy()
        {
            LCMTypes.qokd_inputs_lcmt outobj = new LCMTypes.qokd_inputs_lcmt();
            outobj.NUM_U_TIMESTEPS = this.NUM_U_TIMESTEPS;
 
            outobj.NUM_X_VAR_TRAJ = this.NUM_X_VAR_TRAJ;
 
            outobj.NUM_U_VAR_TRAJ = this.NUM_U_VAR_TRAJ;
 
            outobj.NUM_OPT_VAR_TRAJ = this.NUM_OPT_VAR_TRAJ;
 
            outobj.NUM_GC = this.NUM_GC;
 
            outobj.NUM_GC_x3 = this.NUM_GC_x3;
 
            outobj.NUM_GAIT_TABLE = this.NUM_GAIT_TABLE;
 
            outobj.NUM_FB_DOF = this.NUM_FB_DOF;
 
            outobj.Xref = new double[(int) NUM_X_VAR_TRAJ];
            for (int a = 0; a < this.NUM_X_VAR_TRAJ; a++) {
                outobj.Xref[a] = this.Xref[a];
            }
 
            outobj.Uref = new double[(int) NUM_U_VAR_TRAJ];
            for (int a = 0; a < this.NUM_U_VAR_TRAJ; a++) {
                outobj.Uref[a] = this.Uref[a];
            }
 
            outobj.gait_schedule = new double[(int) NUM_GAIT_TABLE];
            for (int a = 0; a < this.NUM_GAIT_TABLE; a++) {
                outobj.gait_schedule[a] = this.gait_schedule[a];
            }
 
            outobj.dt_opt = new double[(int) NUM_U_TIMESTEPS];
            for (int a = 0; a < this.NUM_U_TIMESTEPS; a++) {
                outobj.dt_opt[a] = this.dt_opt[a];
            }
 
            outobj.mass = this.mass;
 
            outobj.mu = this.mu;
 
            outobj.f_max = new double[(int) NUM_GC];
            for (int a = 0; a < this.NUM_GC; a++) {
                outobj.f_max[a] = this.f_max[a];
            }
 
            outobj.q_min = new double[(int) NUM_FB_DOF];
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                outobj.q_min[a] = this.q_min[a];
            }
 
            outobj.q_max = new double[(int) NUM_FB_DOF];
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                outobj.q_max[a] = this.q_max[a];
            }
 
            outobj.qd_min = new double[(int) NUM_FB_DOF];
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                outobj.qd_min[a] = this.qd_min[a];
            }
 
            outobj.qd_max = new double[(int) NUM_FB_DOF];
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                outobj.qd_max[a] = this.qd_max[a];
            }
 
            outobj.q_init = new double[(int) 6];
            for (int a = 0; a < 6; a++) {
                outobj.q_init[a] = this.q_init[a];
            }
 
            outobj.qd_init = new double[(int) 6];
            for (int a = 0; a < 6; a++) {
                outobj.qd_init[a] = this.qd_init[a];
            }
 
            outobj.c_init = new double[(int) NUM_GC_x3];
            for (int a = 0; a < this.NUM_GC_x3; a++) {
                outobj.c_init[a] = this.c_init[a];
            }
 
            outobj.q_term_min = new double[(int) NUM_FB_DOF];
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                outobj.q_term_min[a] = this.q_term_min[a];
            }
 
            outobj.q_term_max = new double[(int) NUM_FB_DOF];
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                outobj.q_term_max[a] = this.q_term_max[a];
            }
 
            outobj.qd_term_min = new double[(int) NUM_FB_DOF];
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                outobj.qd_term_min[a] = this.qd_term_min[a];
            }
 
            outobj.qd_term_max = new double[(int) NUM_FB_DOF];
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                outobj.qd_term_max[a] = this.qd_term_max[a];
            }
 
            outobj.r_term_min = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.r_term_min[a] = this.r_term_min[a];
            }
 
            outobj.r_term_max = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.r_term_max[a] = this.r_term_max[a];
            }
 
            outobj.rd_term_min = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.rd_term_min[a] = this.rd_term_min[a];
            }
 
            outobj.rd_term_max = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.rd_term_max[a] = this.rd_term_max[a];
            }
 
            outobj.h_term_min = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.h_term_min[a] = this.h_term_min[a];
            }
 
            outobj.h_term_max = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.h_term_max[a] = this.h_term_max[a];
            }
 
            outobj.Qq = new double[(int) NUM_FB_DOF];
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                outobj.Qq[a] = this.Qq[a];
            }
 
            outobj.Qv = new double[(int) NUM_FB_DOF];
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                outobj.Qv[a] = this.Qv[a];
            }
 
            outobj.Qr = new double[(int) 6];
            for (int a = 0; a < 6; a++) {
                outobj.Qr[a] = this.Qr[a];
            }
 
            outobj.Qc = new double[(int) NUM_GC_x3];
            for (int a = 0; a < this.NUM_GC_x3; a++) {
                outobj.Qc[a] = this.Qc[a];
            }
 
            outobj.Qh = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.Qh[a] = this.Qh[a];
            }
 
            outobj.Qf = new double[(int) NUM_GC_x3];
            for (int a = 0; a < this.NUM_GC_x3; a++) {
                outobj.Qf[a] = this.Qf[a];
            }
 
            outobj.Qrdd = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.Qrdd[a] = this.Qrdd[a];
            }
 
            outobj.Qhd = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.Qhd[a] = this.Qhd[a];
            }
 
            outobj.QNq = new double[(int) NUM_FB_DOF];
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                outobj.QNq[a] = this.QNq[a];
            }
 
            outobj.QNv = new double[(int) NUM_FB_DOF];
            for (int a = 0; a < this.NUM_FB_DOF; a++) {
                outobj.QNv[a] = this.QNv[a];
            }
 
            outobj.QNr = new double[(int) 6];
            for (int a = 0; a < 6; a++) {
                outobj.QNr[a] = this.QNr[a];
            }
 
            outobj.QNc = new double[(int) NUM_GC_x3];
            for (int a = 0; a < this.NUM_GC_x3; a++) {
                outobj.QNc[a] = this.QNc[a];
            }
 
            outobj.QNh = new double[(int) 3];
            for (int a = 0; a < 3; a++) {
                outobj.QNh[a] = this.QNh[a];
            }
 
            outobj.init_guess = new double[(int) NUM_OPT_VAR_TRAJ];
            for (int a = 0; a < this.NUM_OPT_VAR_TRAJ; a++) {
                outobj.init_guess[a] = this.init_guess[a];
            }
 
            return outobj;
        }
    }
}

