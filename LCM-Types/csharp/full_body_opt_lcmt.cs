/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

using System;
using System.Collections.Generic;
using System.IO;
using LCM.LCM;
 
namespace LCMTypes
{
    public sealed class full_body_opt_lcmt : LCM.LCM.LCMEncodable
    {
        public float[] qfb_des;
        public float[] vfb_des;
        public float[] q_des;
        public float[] qd_des;
        public float[] tau_ff;
        public float[] qfb;
        public float[] vfb;
        public float[] q;
        public float[] qd;
        public float[] tauEst;
        public float[] tauAct;
 
        public full_body_opt_lcmt()
        {
            qfb_des = new float[6];
            vfb_des = new float[6];
            q_des = new float[12];
            qd_des = new float[12];
            tau_ff = new float[12];
            qfb = new float[6];
            vfb = new float[6];
            q = new float[12];
            qd = new float[12];
            tauEst = new float[12];
            tauAct = new float[12];
        }
 
        public static readonly ulong LCM_FINGERPRINT;
        public static readonly ulong LCM_FINGERPRINT_BASE = 0x681b4539430182c8L;
 
        static full_body_opt_lcmt()
        {
            LCM_FINGERPRINT = _hashRecursive(new List<String>());
        }
 
        public static ulong _hashRecursive(List<String> classes)
        {
            if (classes.Contains("LCMTypes.full_body_opt_lcmt"))
                return 0L;
 
            classes.Add("LCMTypes.full_body_opt_lcmt");
            ulong hash = LCM_FINGERPRINT_BASE
                ;
            classes.RemoveAt(classes.Count - 1);
            return (hash<<1) + ((hash>>63)&1);
        }
 
        public void Encode(LCMDataOutputStream outs)
        {
            outs.Write((long) LCM_FINGERPRINT);
            _encodeRecursive(outs);
        }
 
        public void _encodeRecursive(LCMDataOutputStream outs)
        {
            for (int a = 0; a < 6; a++) {
                outs.Write(this.qfb_des[a]); 
            }
 
            for (int a = 0; a < 6; a++) {
                outs.Write(this.vfb_des[a]); 
            }
 
            for (int a = 0; a < 12; a++) {
                outs.Write(this.q_des[a]); 
            }
 
            for (int a = 0; a < 12; a++) {
                outs.Write(this.qd_des[a]); 
            }
 
            for (int a = 0; a < 12; a++) {
                outs.Write(this.tau_ff[a]); 
            }
 
            for (int a = 0; a < 6; a++) {
                outs.Write(this.qfb[a]); 
            }
 
            for (int a = 0; a < 6; a++) {
                outs.Write(this.vfb[a]); 
            }
 
            for (int a = 0; a < 12; a++) {
                outs.Write(this.q[a]); 
            }
 
            for (int a = 0; a < 12; a++) {
                outs.Write(this.qd[a]); 
            }
 
            for (int a = 0; a < 12; a++) {
                outs.Write(this.tauEst[a]); 
            }
 
            for (int a = 0; a < 12; a++) {
                outs.Write(this.tauAct[a]); 
            }
 
        }
 
        public full_body_opt_lcmt(byte[] data) : this(new LCMDataInputStream(data))
        {
        }
 
        public full_body_opt_lcmt(LCMDataInputStream ins)
        {
            if ((ulong) ins.ReadInt64() != LCM_FINGERPRINT)
                throw new System.IO.IOException("LCM Decode error: bad fingerprint");
 
            _decodeRecursive(ins);
        }
 
        public static LCMTypes.full_body_opt_lcmt _decodeRecursiveFactory(LCMDataInputStream ins)
        {
            LCMTypes.full_body_opt_lcmt o = new LCMTypes.full_body_opt_lcmt();
            o._decodeRecursive(ins);
            return o;
        }
 
        public void _decodeRecursive(LCMDataInputStream ins)
        {
            this.qfb_des = new float[(int) 6];
            for (int a = 0; a < 6; a++) {
                this.qfb_des[a] = ins.ReadSingle();
            }
 
            this.vfb_des = new float[(int) 6];
            for (int a = 0; a < 6; a++) {
                this.vfb_des[a] = ins.ReadSingle();
            }
 
            this.q_des = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                this.q_des[a] = ins.ReadSingle();
            }
 
            this.qd_des = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                this.qd_des[a] = ins.ReadSingle();
            }
 
            this.tau_ff = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                this.tau_ff[a] = ins.ReadSingle();
            }
 
            this.qfb = new float[(int) 6];
            for (int a = 0; a < 6; a++) {
                this.qfb[a] = ins.ReadSingle();
            }
 
            this.vfb = new float[(int) 6];
            for (int a = 0; a < 6; a++) {
                this.vfb[a] = ins.ReadSingle();
            }
 
            this.q = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                this.q[a] = ins.ReadSingle();
            }
 
            this.qd = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                this.qd[a] = ins.ReadSingle();
            }
 
            this.tauEst = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                this.tauEst[a] = ins.ReadSingle();
            }
 
            this.tauAct = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                this.tauAct[a] = ins.ReadSingle();
            }
 
        }
 
        public LCMTypes.full_body_opt_lcmt Copy()
        {
            LCMTypes.full_body_opt_lcmt outobj = new LCMTypes.full_body_opt_lcmt();
            outobj.qfb_des = new float[(int) 6];
            for (int a = 0; a < 6; a++) {
                outobj.qfb_des[a] = this.qfb_des[a];
            }
 
            outobj.vfb_des = new float[(int) 6];
            for (int a = 0; a < 6; a++) {
                outobj.vfb_des[a] = this.vfb_des[a];
            }
 
            outobj.q_des = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                outobj.q_des[a] = this.q_des[a];
            }
 
            outobj.qd_des = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                outobj.qd_des[a] = this.qd_des[a];
            }
 
            outobj.tau_ff = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                outobj.tau_ff[a] = this.tau_ff[a];
            }
 
            outobj.qfb = new float[(int) 6];
            for (int a = 0; a < 6; a++) {
                outobj.qfb[a] = this.qfb[a];
            }
 
            outobj.vfb = new float[(int) 6];
            for (int a = 0; a < 6; a++) {
                outobj.vfb[a] = this.vfb[a];
            }
 
            outobj.q = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                outobj.q[a] = this.q[a];
            }
 
            outobj.qd = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                outobj.qd[a] = this.qd[a];
            }
 
            outobj.tauEst = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                outobj.tauEst[a] = this.tauEst[a];
            }
 
            outobj.tauAct = new float[(int) 12];
            for (int a = 0; a < 12; a++) {
                outobj.tauAct[a] = this.tauAct[a];
            }
 
            return outobj;
        }
    }
}

